<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Php | 闲散记事]]></title>
  <link href="http://lvzwq.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://lvzwq.github.io/"/>
  <updated>2018-11-02T16:57:00+08:00</updated>
  <id>http://lvzwq.github.io/</id>
  <author>
    <name><![CDATA[Lvzwq]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[YII2发送邮件]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/22/yii2fa-song-you-jian/"/>
    <updated>2015-11-22T23:06:47+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/22/yii2fa-song-you-jian</id>
    <content type="html"><![CDATA[<!--more-->


<p><code>YII2</code>是<code>PHP</code>中一个比较流行的WEB框架。
下面来讲一下在<code>YII2</code>中如何配置邮件服务。<code>YII2</code>中默认是使用<code>swiftmailer</code>来发送邮件的。
如果<code>YII2</code>中没有这个扩展，可以使用以下方式安装
<code>sh
php composer.phar require --prefer-dist yiisoft/yii2-swiftmailer
</code>
或者添加以下代码到<code>composer.json</code>
<code>
"yiisoft/yii2-swiftmailer": "~2.0.0"
</code>
然后执行<code>composer install</code>命令更新扩展</p>

<p>安装完之后，需要在<code>YII2</code>的配置文件中配置邮箱的基本信息
在<code>config/web.php</code>中添加
<code>Php
'mailer' =&gt; [
            'class' =&gt; 'yii\swiftmailer\Mailer',
            'viewPath' =&gt; '@app/mail',  //配置邮件模板的位置
            'transport' =&gt; [
                'class' =&gt; 'Swift_SmtpTransport',
                'host' =&gt; 'smtp.126.com',
                'username' =&gt; 'xxuser@126.com',
                'password' =&gt; 'xxpwd',
                'port' =&gt; '465',
                'encryption' =&gt; 'ssl',
            ],
            'useFileTransport' =&gt; false,
            'messageConfig'=&gt; [
                'charset'=&gt;'UTF-8',
                'from'=&gt;['xxuser@126.com'=&gt;'admin']
            ],
        ],
</code></p>

<h2>简单的邮件</h2>

<pre><code>Yii::$app-&gt;mailer-&gt;compose()
     -&gt;setFrom('xxuser@126.com')
     -&gt;setTo($mailTo)
     -&gt;setTextBody('您好， 有邮件来访')   //发布纯文字文本
     //-&gt;setHtmlBody("点击查看&lt;a href='zwq.bingyan.net'&gt;zwq.bingyan.net&lt;/a&gt;")    //发布可以带html标签的文本
     -&gt;setSubject($subject)
     -&gt;send();
</code></pre>

<h2>带有模板的邮件</h2>

<pre><code> $mail = Yii::$app-&gt;mailer-&gt;compose('resetPassword', [ "id" =&gt; 123, "key" =&gt; "asdsfdgfrtryt124354"]);
        $mail-&gt;setFrom(Yii::$app-&gt;params['adminEmail']);
        $mail-&gt;setTo("xxuser@gmail.com");
        $mail-&gt;setSubject("XX网 | 密码重置");
        return $mail-&gt;send();
</code></pre>

<p>上面的代码说明，使用<code>resetPassword.php</code>这个模板,模板文件在刚才配置的<code>viewPath</code>这个目录下。
另外这个模板默认是以一个公共的模板<code>layouts/html.php</code>配置的。发送带有模板的邮件是不需要调用<code>setTextBody</code>和<code>setHtmlBody</code>的。
模板文件目录结构如下所示
<code>
-- mail/
    -- layouts/
        -- html.php
    -- resetPassword.php
</code>
其中<code>html.php</code>
```php
&lt;?php
use yii\helpers\Html;</p>

<p>/<em> @var $this \yii\web\View view component instance </em>/
/<em> @var $message \yii\mail\MessageInterface the message being composed </em>/
/<em> @var $content string main view render result </em>/
$resetURL = Yii::$app->urlManager->createAbsoluteUrl([&lsquo;user/activate&rsquo;]);
?>
&lt;?php $this->beginPage() ?>
&lt;!DOCTYPE html PUBLIC &ldquo;-//W3C//DTD XHTML 1.0 Strict//EN&rdquo; &ldquo;<a href="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</a>&rdquo;>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=<?= Yii::$app->charset ?>&ldquo; />
    <title>&lt;?= Html::encode($this->title) ?></title>
    &lt;?php $this->head() ?>
</head>
<body>
    &lt;?php $this->beginBody() ?>
    &lt;?= $content ?>
    &lt;?php $this->endBody() ?>
</body>
</html>
&lt;?php $this->endPage() ?>
<code>
`resetPassword.php`中
</code>
&lt;?php
use yii\helpers\Html;</p>

<p>$resetLink = Yii::$app->urlManager->createAbsoluteUrl([&lsquo;user/activate&rsquo;, &lsquo;id&rsquo; => $id, &ldquo;key&rdquo; => $key]);
?></p>

<p>尊敬的用户</p>


<p>您好!</p>


<p><b>请点击以下链接重置密码</b><br>
<a href="<?= $resetLink ?>&ldquo;>&lt;?= $resetLink ?></a>
<br><br></p>

<p>系统发信，请勿回复</p>


<pre><code>在`resetPassword.php`最后解析的`html`内容会替换到`html.php`中的`$content`.
在向模板中传递参数时，是以数组的形式传递的，如上`$id`, `$key`和`compose`中第二个参数保持一致。

根据上面配置会生成
`http://www.example.com/user/activite?id=123&amp;key=asdsfdgfrtryt124354`
这个链接不够友好，我们可以使Ta更加`Restful`
`http://www.example.com/user/activite/123/asdsfdgfrtryt124354`
这样需要在`config/web.php`中配置
</code></pre>

<p>&lsquo;urlManager&rsquo; => [
            &lsquo;showScriptName&rsquo; => false,
            &lsquo;enablePrettyUrl&rsquo; => true,
            //&lsquo;suffix&rsquo; => &lsquo;.htm&rsquo;,
            &lsquo;rules&rsquo; => [
                &ldquo;&lt;controller:(user)>/&lt;action:(activate)>/&lt;id:\d+>/&lt;key:\w+>&rdquo; => &lsquo;<controller>/<action>&rsquo;,
            ],
        ],
```</p>

<p>更详细，请参考<a href="http://www.yiiframework.com/doc-2.0/ext-swiftmailer-index.html">官方教程</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP7安装OpenSSL扩展]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/21/php7an-zhuang-opensslkuo-zhan/"/>
    <updated>2015-11-21T23:05:31+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/21/php7an-zhuang-opensslkuo-zhan</id>
    <content type="html"><![CDATA[<!--more-->


<p>因为项目中需要发邮件，使用了<code>ssl</code>加密，所以需要<code>PHP</code>对<code>OpenSSL</code>支持。没有这个扩展的话，会报这个错误。
<code>
Unable to find the socket transport “ssl” - did you forget to enable it when you configured PHP
</code>
首先查找PHP中是否已经有这个扩展，是否未加载成功。
<code>
$ php-config70 --extension-dir  
/opt/local/lib/php70/extensions/no-debug-non-zts-20141001
$ cd /opt/local/lib/php70/extensions/no-debug-non-zts-20141001
</code></p>

<p>如果没有安装，目录下一版没有<code>openssl.so</code>这个文件。一种简单的安装方法，是从<code>PHP</code>的源码重新编译这个扩展。
到官网<a href="https://downloads.php.net/~ab/">https://downloads.php.net/~ab/</a>下载对应版本的<code>PHP7</code>源码.
<code>
$ wget https://downloads.php.net/~ab/php-7.0.0RC6.tar.gz
$ tar zxvf php-7.0.0RC6.tar.gz
$ cd php-7.0.0RC6/ext/openssl
</code>
在目录下下执行<code>phpize70</code>,会报错。提示使用绝对路径
```
$ /opt/local/bin/phpize70
Cannot find config.m4  # 报错找不到文件</p>

<h1>然后执行</h1>

<p>$ mv config0.m4 config.m4</p>

<h1>再次执行 /opt/local/bin/phpize70</h1>

<p>Configuring for:
PHP Api Version:         20131218
Zend Module Api No:      20141001
Zend Extension Api No:   320140815</p>

<h2>编译安装,首先找到php-config70文件路径</h2>

<p>$ where php-config70
/opt/local/bin/php-config70
$ ./configure &ndash;with-php-config=/opt/local/bin/php-config70
$ sudo make &amp; make install
<code>
安装成功之后，出现
</code>
/bin/sh /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/libtool &ndash;mode=install cp ./openssl.la /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules
cp ./.libs/openssl.so /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules/openssl.so</p>

<h2>cp ./.libs/openssl.lai /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules/openssl.la</h2>

<p>Libraries have been installed in:
   /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules</p>

<p>If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the <code>-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the</code>DYLD_LIBRARY_PATH' environment variable
     during execution</p>

<p>See any operating system documentation about shared libraries for</p>

<h2>more information, such as the ld(1) and ld.so(8) manual pages.</h2>

<p>Installing shared extensions:     /opt/local/lib/php70/extensions/no-debug-non-zts-20141001/
<code>``
此时，会发现</code>/opt/local/lib/php70/extensions/no-debug-non-zts-20141001/<code>目录下多了个</code>openssl.so<code>的文件，我们让</code>PHP<code>将其加载就行.
加载的方式有两种，一种直接在</code>php.ini<code>文件中添加</code>extension=openssl.so`</p>

<p>另一种方式，查找到PHP配置文件目录
<code>
$ php-config70 --configure-options
可以找到如下
--with-config-file-scan-dir=/opt/local/var/db/php70
</code>
进入可以看到有数个<code>ini</code>文件。添加一个<code>openssl.ini</code>文件，并在其中添加<code>extension=openssl.so</code>.</p>

<p>重启<code>php-fpm</code>,就可以看到扩展加载成功了。</p>

<p>转载自<a href="http://www.52jscn.com/web/2013/05/4592.shtml">php开启openssl的方法</a></p>
]]></content>
  </entry>
  
</feed>
