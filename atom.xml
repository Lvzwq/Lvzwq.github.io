<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[闲散记事]]></title>
  <link href="http://lvzwq.github.io/atom.xml" rel="self"/>
  <link href="http://lvzwq.github.io/"/>
  <updated>2017-05-07T00:41:31+08:00</updated>
  <id>http://lvzwq.github.io/</id>
  <author>
    <name><![CDATA[Lvzwq]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ElasticSearch5.3.1 集群搭建]]></title>
    <link href="http://lvzwq.github.io/blog/2017/05/06/elasticsearch5-dot-3-1-ji-qun-da-jian/"/>
    <updated>2017-05-06T16:25:43+08:00</updated>
    <id>http://lvzwq.github.io/blog/2017/05/06/elasticsearch5-dot-3-1-ji-qun-da-jian</id>
    <content type="html"><![CDATA[<p>参考: <a href="http://blog.csdn.net/gamer_gyt/article/details/59077189">Elasticsearch5.2.1集群搭建，动态加入节点，并添加监控诊断插件</a></p>

<!--more-->


<h2>准备阶段</h2>

<p>1、Java1.8<br/>
2、下载elasticsearch5.3.1  <br/>
3、设置环境变量 JAVA_HOME</p>

<h2>配置修改</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cluster.name: es5-cluster   # 集群名称
</span><span class='line'>node.name: node-1    # 节点名称
</span><span class='line'>network.host: 192.168.138.129
</span><span class='line'>http.port: 9200
</span><span class='line'>transport.tcp.port: 9300
</span><span class='line'>node.master: true  # 是否作为集群的主结点
</span><span class='line'>node.data: true  # 是否存储数据，值为true
</span><span class='line'>discovery.zen.ping.unicast.hosts: ["192.168.138.128:9300", "192.168.138.129:9300", "192.168.138.130:9300"]
</span><span class='line'>discovery.zen.minimum_master_nodes: 1
</span><span class='line'>gateway.recover_after_nodes: 2
</span><span class='line'>gateway.recover_after_time: 5m
</span><span class='line'>gateway.expected_nodes: 1
</span><span class='line'>script.engine.groovy.inline.search: on
</span><span class='line'>script.engine.groovy.inline.aggs: on
</span><span class='line'>indices.recovery.max_bytes_per_sec: 20mb</span></code></pre></td></tr></table></div></figure>


<h2>常见的错误</h2>

<p>启动命令<code>bin/elasticsearch -d</code>后，出现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[2017-04-22T10:14:51,251][ERROR][o.e.b.Bootstrap          ] [node-3] node validation exception
</span><span class='line'>bootstrap checks failed
</span><span class='line'>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]
</span><span class='line'>[2017-04-22T10:14:51,332][INFO ][o.e.n.Node               ] [node-3] stopping ...
</span><span class='line'>[2017-04-22T10:14:51,401][INFO ][o.e.n.Node               ] [node-3] stopped
</span><span class='line'>[2017-04-22T10:14:51,402][INFO ][o.e.n.Node               ] [node-3] closing ...
</span><span class='line'>[2017-04-22T10:14:51,417][INFO ][o.e.n.Node               ] [node-3] closed</span></code></pre></td></tr></table></div></figure>


<p>解决方法</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo sysctl -w vm.max_map_count=655360
</span><span class='line'># 设置系统打开文件最大句柄
</span><span class='line'>sudo cat /proc/sys/fs/file-max
</span><span class='line'>ulimit -n 65536</span></code></pre></td></tr></table></div></figure>


<p>可以根据服务器的配置修改JVM参数，修改文件<code>elasticsearch-5.3.1/config/jvm.options</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Xms represents the initial size of total heap space
</span><span class='line'># Xmx represents the maximum size of total heap space
</span><span class='line'>
</span><span class='line'>-Xms512m
</span><span class='line'>-Xmx512m
</span><span class='line'>
</span><span class='line'>################################################################
</span><span class='line'>## Expert settings
</span><span class='line'>################################################################
</span><span class='line'>##
</span><span class='line'>## All settings below this section are considered
</span><span class='line'>## expert settings. Don't tamper with them unless
</span><span class='line'>## you understand what you are doing
</span><span class='line'>##
</span><span class='line'>################################################################
</span><span class='line'>
</span><span class='line'>## GC configuration
</span><span class='line'>-XX:+UseConcMarkSweepGC
</span><span class='line'>-XX:CMSInitiatingOccupancyFraction=75
</span><span class='line'>-XX:+UseCMSInitiatingOccupancyOnly</span></code></pre></td></tr></table></div></figure>


<p>打开浏览器，访问<a href="http://192.168.138.129:9200,">http://192.168.138.129:9200,</a> 如果出现以下页面则表示安装成功
<img src="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-164120@2x.png" alt="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-164120@2x.png" /></p>

<p>访问<a href="http://192.168.138.129:9200/_cluster/health?pretty=true">http://192.168.138.129:9200/_cluster/health?pretty=true</a>
<img src="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-164430@2x.png" alt="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-164430@2x.png" /></p>

<h2>kibana安装</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget https://artifacts.elastic.co/downloads/kibana/kibana-5.3.1-linux-x86_64.tar.gz</span></code></pre></td></tr></table></div></figure>


<p>修改config/kibana.yml文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server.port: 5601
</span><span class='line'>server.host: "192.168.138.129"
</span><span class='line'>elasticsearch.url: "http://192.168.138.129:9200"</span></code></pre></td></tr></table></div></figure>


<p>启动</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kibana </span></code></pre></td></tr></table></div></figure>


<p>访问<a href="http://192.168.138.129:5601">http://192.168.138.129:5601</a> 客户端</p>

<h2>head插件安装</h2>

<p>下载head插件，首先需要保证系统安装nodejs</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/mobz/elasticsearch-head.git
</span><span class='line'>cd elasticsearch-head
</span><span class='line'>npm install</span></code></pre></td></tr></table></div></figure>


<p>在elasticsearch.yml文件中添加</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 增加新的参数，这样head插件可以访问es
</span><span class='line'>http.cors.enabled: true
</span><span class='line'>http.cors.allow-origin: "*"</span></code></pre></td></tr></table></div></figure>


<p>修改head/Gruntfile.js</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>connect: {
</span><span class='line'>    server: {
</span><span class='line'>        options: {
</span><span class='line'>            port: 9100,
</span><span class='line'>            hostname: '*',
</span><span class='line'>            base: '.',
</span><span class='line'>            keepalive: true
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>把localhost修改成你es的服务器地址，如:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>this.base_uri = this.config.base_uri || this.prefs.get("app-base_uri") || "http://192.168.138.129:9200";</span></code></pre></td></tr></table></div></figure>


<p>启动grunt服务</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>node_modules/grunt/bin/grunt server</span></code></pre></td></tr></table></div></figure>


<p>访问<a href="http://192.168.138.129:9100,">http://192.168.138.129:9100,</a> 如果出现以下则表示集群安装成功</p>

<p><img src="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-171946@2x.png" alt="http://7xig7d.com1.z0.glb.clouddn.com/WX20170506-171946@2x.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kafka集群搭建]]></title>
    <link href="http://lvzwq.github.io/blog/2017/04/25/kafkaji-qun-da-jian/"/>
    <updated>2017-04-25T00:58:41+08:00</updated>
    <id>http://lvzwq.github.io/blog/2017/04/25/kafkaji-qun-da-jian</id>
    <content type="html"><![CDATA[<p>参考:<a href="http://www.jianshu.com/p/dc4770fc34b6">kafka环境搭建2-broker集群+zookeeper集群</a></p>

<!--more-->


<h3>首先搭建zk集群</h3>

<p>前面已经介绍过了</p>

<h3>Kafka配置修改</h3>

<p>修改<code>config/server.properties</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>broker.id=1 
</span><span class='line'>host.name=192.168.138.128
</span><span class='line'>log.dirs=/root/kafka-logs
</span><span class='line'>zookeeper.connect=192.168.138.128:2181,192.168.138.129:2181,192.168.138.130:2181</span></code></pre></td></tr></table></div></figure>


<p>其中broker.id 根据集群机器分别编号1,2,3&hellip;</p>

<h3>启动zk</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kafka-server-start.sh -daemon config/server.properties</span></code></pre></td></tr></table></div></figure>


<h3>创建kafka topic节点</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@master logs]# ../bin/kafka-topics.sh --describe --zookeeper 192.168.138.128:2181 --topic topic_test
</span><span class='line'>OpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N
</span><span class='line'>Topic:topic_test  PartitionCount:3    ReplicationFactor:3 Configs:
</span><span class='line'>  Topic: topic_test   Partition: 0    Leader: 2   Replicas: 2,3,1 Isr: 2,1,3
</span><span class='line'>  Topic: topic_test   Partition: 1    Leader: 3   Replicas: 3,1,2 Isr: 1,2,3
</span><span class='line'>  Topic: topic_test   Partition: 2    Leader: 1   Replicas: 1,2,3 Isr: 2,1,3</span></code></pre></td></tr></table></div></figure>


<h3>查询kafka topic状态</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kafka-topics.sh --describe --zookeeper 192.168.138.129:2181 --topic topic_test</span></code></pre></td></tr></table></div></figure>


<h3>Kafka消费者</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kafka-console-consumer.sh --bootstrap-server 192.168.138.128:9092 --topic topic_test --from-beginning</span></code></pre></td></tr></table></div></figure>


<h3>Kafka生产者</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kafka-console-producer.sh --broker-list 192.168.138.130:9092 --topic topic_test --from-beginning</span></code></pre></td></tr></table></div></figure>


<h3>Kafka验证消息</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list 192.168.138.128:9092,192.168.138.129:9092,192.168.138.130:9092 --topic topic_test --time -1</span></code></pre></td></tr></table></div></figure>


<h3>查看消费者Offset</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@master kafka_2.12-0.10.2.0]# bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list 192.168.138.128:9092,192.168.138.129:9092,192.168.138.130:9092 --topic topic_test --time -1
</span><span class='line'>topic_test:2:4
</span><span class='line'>topic_test:1:5
</span><span class='line'>topic_test:0:4</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 对字符串转为可执行代码]]></title>
    <link href="http://lvzwq.github.io/blog/2017/04/25/java-dui-zi-fu-chuan-zhuan-wei-ke-zhi-xing-dai-ma/"/>
    <updated>2017-04-25T00:54:14+08:00</updated>
    <id>http://lvzwq.github.io/blog/2017/04/25/java-dui-zi-fu-chuan-zhuan-wei-ke-zhi-xing-dai-ma</id>
    <content type="html"><![CDATA[<!--more-->


<h2>方法一</h2>

<p>参考: <a href="http://wiselyman.iteye.com/blog/1677444">java实现字符串转换成可执行代码</a></p>

<p>使用commons的jexl包</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>     &lt;dependency&gt;
</span><span class='line'>            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
</span><span class='line'>            &lt;artifactId&gt;commons-jexl&lt;/artifactId&gt;
</span><span class='line'>            &lt;version&gt;2.0&lt;/version&gt;
</span><span class='line'>        &lt;/dependency&gt;</span></code></pre></td></tr></table></div></figure>


<p>代码示例</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Map&lt;String,Object&gt; map=new HashMap&lt;String,Object&gt;();  
</span><span class='line'>map.put("testService",testService);  
</span><span class='line'>map.put("person",person);  
</span><span class='line'>String expression="testService.save(person)";  
</span><span class='line'>
</span><span class='line'> JexlEngine jexl=new JexlEngine();  
</span><span class='line'> Expression e = jexl.createExpression(expression);  
</span><span class='line'> JexlContext jc = new MapContext();  
</span><span class='line'> for(String key:map.keySet()){  
</span><span class='line'>       jc.set(key, map.get(key));  
</span><span class='line'> }  
</span><span class='line'> Object o = e.evaluate(jc);</span></code></pre></td></tr></table></div></figure>


<h2>方式二</h2>

<p>参考:<a href="http://blog.csdn.net/w1014074794/article/details/45968559">java执行字符串数学表达式 ScriptEngine</a></p>

<p>使用Java自带的jdk, <code>javax.script.ScriptEngine</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> String str = "3&&2&&1";
</span><span class='line'>  ScriptEngineManager factory = new ScriptEngineManager();
</span><span class='line'>    ScriptEngine engine = factory.getEngineByName("JavaScript");
</span><span class='line'>    str = str.replace("2", "true");
</span><span class='line'>    str = str.replace("3", "true");
</span><span class='line'>    str = str.replace("1", "false");
</span><span class='line'>    Object o = null;
</span><span class='line'>    try {
</span><span class='line'>        o = engine.eval(str);
</span><span class='line'>    } catch (ScriptException e) {
</span><span class='line'>        e.printStackTrace();
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zookeeper集群搭建]]></title>
    <link href="http://lvzwq.github.io/blog/2017/04/13/zookeeperji-qun-da-jian/"/>
    <updated>2017-04-13T21:25:29+08:00</updated>
    <id>http://lvzwq.github.io/blog/2017/04/13/zookeeperji-qun-da-jian</id>
    <content type="html"><![CDATA[<!--more-->


<h2>环境安装</h2>

<h3>java环境</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install java-1.8.0-openjdk-headless.x86_64
</span></code></pre></td></tr></table></div></figure>


<h3>下载zookeeper安装包</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
</span></code></pre></td></tr></table></div></figure>


<h3>配置</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar zxvf zookeeper-3.4.9.tar.gz
</span><span class='line'><span class="nb">cd </span>zookeeper-3.4.9/conf
</span><span class='line'><span class="c"># 修改zoo.cfg</span>
</span><span class='line'>cp zoo_sample.cfg zoo.cfg
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>配置文件中主要修改</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># The number of milliseconds of each tick</span>
</span><span class='line'><span class="nv">tickTime</span><span class="o">=</span>2000
</span><span class='line'><span class="c"># The number of ticks that the initial</span>
</span><span class='line'><span class="c"># synchronization phase can take</span>
</span><span class='line'><span class="nv">initLimit</span><span class="o">=</span>10
</span><span class='line'><span class="c"># The number of ticks that can pass between</span>
</span><span class='line'><span class="c"># sending a request and getting an acknowledgement</span>
</span><span class='line'><span class="nv">syncLimit</span><span class="o">=</span>5
</span><span class='line'><span class="c"># the directory where the snapshot is stored.</span>
</span><span class='line'><span class="c"># do not use /tmp for storage, /tmp here is just</span>
</span><span class='line'><span class="c"># example sakes.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 修改zk数据文件存储位置</span>
</span><span class='line'><span class="nv">dataDir</span><span class="o">=</span>/root/zookeeper
</span><span class='line'><span class="c"># the port at which the clients will connect</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 修改zk 客户端连接端口</span>
</span><span class='line'><span class="nv">clientPort</span><span class="o">=</span>2181
</span><span class='line'><span class="c"># the maximum number of client connections.</span>
</span><span class='line'><span class="c"># increase this if you need to handle more clients</span>
</span><span class='line'><span class="c">#maxClientCnxns=60</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Be sure to read the maintenance section of the</span>
</span><span class='line'><span class="c"># administrator guide before turning on autopurge.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># The number of snapshots to retain in dataDir</span>
</span><span class='line'><span class="c">#autopurge.snapRetainCount=3</span>
</span><span class='line'><span class="c"># Purge task interval in hours</span>
</span><span class='line'><span class="c"># Set to &quot;0&quot; to disable auto purge feature</span>
</span><span class='line'><span class="c">#autopurge.purgeInterval=1</span>
</span><span class='line'>
</span><span class='line'><span class="c"># zk集群的端口</span>
</span><span class='line'>server.0<span class="o">=</span>192.168.138.128:20881:30881
</span><span class='line'>server.1<span class="o">=</span>192.168.138.129:20881:30881
</span><span class='line'>server.2<span class="o">=</span>192.168.138.130:20881:30881
</span></code></pre></td></tr></table></div></figure>


<pre><code>    在对应的机器上将server.x=xxx.xxx.xx.xx:20881:30881改为0.0.0.0:20881:30881
</code></pre>

<ul>
<li>参数的含义</li>
</ul>


<blockquote><p>server.0、server.1、server.2 是指整个zookeeper集群内的节点列表。server的配置规则为：  server.N=YYY:A:B<br/>
N表示服务器编号<br/>
YYY表示服务器的IP地址<br/>
A为LF通信端口，表示该服务器与集群中的leader交换的信息的端口。<br/>
B为选举端口，表示选举新leader时服务器间相互通信的端口（当leader挂掉时，其余服务器会相互通信，选择出新的leader）<br/>
一般来说，集群中每个服务器的A端口都是一样，每个服务器的B端口也是一样。但是当所采用的为伪集群时，IP地址都一样，只能是A端口和B端口不一样。</p></blockquote>

<h3>启动前配置</h3>

<pre><code>在zk数据dataDir存储目录/root/zookeeper下新建myid文件，并分别写入0,1,2，与配置中的相同
</code></pre>

<p>启动服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/zkServer.sh start
</span></code></pre></td></tr></table></div></figure>


<h3>查看服务状态</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># zookeeper1</span>
</span><span class='line'><span class="o">[</span>root@master zookeeper-3.4.9<span class="o">]</span><span class="c"># bin/zkServer.sh status</span>
</span><span class='line'>ZooKeeper JMX enabled by default
</span><span class='line'>Using config: /root/zookeeper-3.4.9/bin/../conf/zoo.cfg
</span><span class='line'>Mode: follower
</span><span class='line'>
</span><span class='line'><span class="c"># zookeeper2</span>
</span><span class='line'>root@ubuntu:~/zookeeper-3.4.9# bin/zkServer.sh status
</span><span class='line'>ZooKeeper JMX enabled by default
</span><span class='line'>Using config: /root/zookeeper-3.4.9/bin/../conf/zoo.cfg
</span><span class='line'>Mode: leader
</span></code></pre></td></tr></table></div></figure>


<h3>遇到的问题</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>2017-04-11 20:48:09,120 <span class="o">[</span>myid:2<span class="o">]</span> - WARN  <span class="o">[</span>/0.0.0.0:30881:QuorumCnxManager@400<span class="o">]</span> - Cannot open channel to <span class="m">0</span> at election address /192.168.138.128:30881
</span><span class='line'>java.net.NoRouteToHostException: No route to host <span class="o">(</span>Host unreachable<span class="o">)</span>
</span><span class='line'>  at java.net.PlainSocketImpl.socketConnect<span class="o">(</span>Native Method<span class="o">)</span>
</span><span class='line'>  at java.net.AbstractPlainSocketImpl.doConnect<span class="o">(</span>AbstractPlainSocketImpl.java:350<span class="o">)</span>
</span><span class='line'>  at java.net.AbstractPlainSocketImpl.connectToAddress<span class="o">(</span>AbstractPlainSocketImpl.java:206<span class="o">)</span>
</span><span class='line'>  at java.net.AbstractPlainSocketImpl.connect<span class="o">(</span>AbstractPlainSocketImpl.java:188<span class="o">)</span>
</span><span class='line'>  at java.net.SocksSocketImpl.connect<span class="o">(</span>SocksSocketImpl.java:392<span class="o">)</span>
</span><span class='line'>  at java.net.Socket.connect<span class="o">(</span>Socket.java:589<span class="o">)</span>
</span><span class='line'>  at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne<span class="o">(</span>QuorumCnxManager.java:381<span class="o">)</span>
</span><span class='line'>  at org.apache.zookeeper.server.quorum.QuorumCnxManager.receiveConnection<span class="o">(</span>QuorumCnxManager.java:295<span class="o">)</span>
</span><span class='line'>  at org.apache.zookeeper.server.quorum.QuorumCnxManager<span class="nv">$Listener</span>.run<span class="o">(</span>QuorumCnxManager.java:543<span class="o">)</span>
</span><span class='line'>2017-04-11 20:48:09,121 <span class="o">[</span>myid:2<span class="o">]</span> - INFO  <span class="o">[</span>/0.0.0.0:30881:QuorumPeer<span class="nv">$QuorumServer</span>@149<span class="o">]</span> - Resolved hostname: 192.168.138.128 to address: /192.168.138.128
</span></code></pre></td></tr></table></div></figure>


<p>这个出现在了一台centos机器上，主要原因是防火墙禁止访问
最简单的方法是禁止防火墙</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>systemctl stop firewalld.service
</span><span class='line'>systemctl disable firewalld.service <span class="c">#禁止firewall开机启动</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外一种开启端口访问</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/sbin/iptables -I INPUT -p tcp --dport <span class="m">2181</span> -j ACCEPT
</span><span class='line'>/sbin/iptables -I INPUT -p tcp --dport <span class="m">20881</span> -j ACCEPT
</span><span class='line'>/sbin/iptables -I INPUT -p tcp --dport <span class="m">30881</span> -j ACCEPT
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>同步服务器时间</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install nptdate
</span><span class='line'>
</span><span class='line'>ntpdate time.nist.gov
</span><span class='line'>另外的时间服务器
</span><span class='line'>time.nist.gov
</span><span class='line'>time.nuri.net
</span><span class='line'>0.asia.pool.ntp.org
</span><span class='line'>1.asia.pool.ntp.org
</span><span class='line'>2.asia.pool.ntp.org
</span><span class='line'>3.asia.pool.ntp.org
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MAC上不错的软件和自用的优秀Chrome插件]]></title>
    <link href="http://lvzwq.github.io/blog/2015/12/26/macshang-bu-cuo-de-ruan-jian-he-zi-yong-de-you-xiu-chromecha-jian/"/>
    <updated>2015-12-26T23:38:06+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/12/26/macshang-bu-cuo-de-ruan-jian-he-zi-yong-de-you-xiu-chromecha-jian</id>
    <content type="html"><![CDATA[<!--more-->


<h2><code>Chrome</code>上推荐使用的插件</h2>

<p><code>WEB前端助手(FeHelper)</code> 一个格式化json格式的软件，功能非常强大，可以加密，时间戳转化等等。<br/>
<code>json-handle</code> 一款处理<code>json</code>格式的插件，自动识别<code>json</code>格式，并格式化 <br/>
<code>vimlum</code>在chrome上使用vim快捷键，其中尤其是F键特别好使<br/>
<code>postman</code> 一款模拟http请求的插件<br/>
<code>markdown here</code> 将markdown语法的文本转化成markdown的效果的插件<br/>
<code>有道词典</code>快速划词翻译的插件<br/>
<code>Live http headers</code>查看http请求的信息的插件<br/>
<code>AdBlock</code> 一款拦截广告的软件<br/>
<code>马克飞象</code> 一个使用markdown语法的文本编辑器，推荐使用，并且可以同步到印象笔记，但是需要付费<br/>
<code>Octotree</code> 一个将github项目生成目录树的插件，推荐使用。<br/>
<code>Pocket</code> 一个快速保存网页的插件，结合<code>Pickpocket</code>会更加方便。<br/>
<code>oneTab</code> 一个Chrome标签管理工具<br/>
<code>Checker Plus for Gmail</code> 一个不用打开Gmail查看Gmail邮件的插件，使用谷歌邮箱作为常用邮箱推荐使用。<br/>
<code>Checker Plus for Google Calendar</code> 将谷歌日历做成chrome上一个很方便的插件。<br/>
<code>lastPass</code> 一个密码管理软件，如果嫌记忆密码麻烦，可以全部交给它。</p>

<h2>MAC上一些经常使用的软件</h2>

<h3>代码编辑(本人自己电脑上安装的)</h3>

<ol>
<li><code>Xcode</code>
不解释，MAC上的神器</li>
<li><code>Sublime Text</code></li>
<li><code>Jetbrains</code>软件都非常优秀
 <code>PyCharm</code>
 <code>Phpstorm</code>
 <code>Intellij IDEA</code>
 <code>Clion</code></li>
<li><code>Android Studio</code> 安卓开发的神器</li>
<li><code>Atom</code> 外观十分漂亮，Github上有许多优秀的插件</li>
<li><code>Eclipse</code> 开源IDE， 功能十分强大，不过MAC上我用的比较少。</li>
<li><code>VS Code</code> 功能很强大，有着丰富的插件</li>
</ol>


<h3>命令行工具</h3>

<p><code>iTerm2</code> 一个mac终端软件,比自带Terminal优秀许多</p>

<h3>文档工具</h3>

<p><code>Dash</code> 可以直接离线文档，随时查看,非常方便(推荐)
<code>微软三件套Word、PPT、Excel</code>， 必备不解释
<code>CAJViewerMac</code>  这个查看科学文献必备工具
<code>CHM Reader</code> 查看chm格式的文档
<code>kindle</code> 这个不解释</p>

<h3>手势增强工具</h3>

<p><code>BetterTouchTool</code> 这个软件也体现了mac上触摸板的强大。</p>

<h3>翻墙上网</h3>

<p><code>Shadowsocks</code></p>

<h3>邮件客户端</h3>

<p>Foxmail, 和自带<code>mail</code>软件有的一拼</p>

<h3>笔记软件</h3>

<p><code>Evernote</code>印象笔记
<code>simplenote</code>(简易笔记软件)比自带笔记软件好用一点是可以添加标签，可以同步</p>

<h3>markdown编辑器</h3>

<p><code>Cmd markdown编辑器</code>，这个可以多平台使用，云端同步，导出PDF等等，功能越来越强大，而且主题也很漂亮，推荐使用。
<code>Mou</code>
<code>马克飞象</code></p>

<h3>音视频播放器</h3>

<p>网易云播放器、QQ音乐播放器
爱奇艺视频播放器
射手音影， 这个也非常好，动漫的话可以自己搜索匹配字幕。
<code>Moist</code> 视频播放器
<code>MPlayerX</code> 视频播放器，推荐使用</p>

<h3>搜索查找优化</h3>

<p><code>Alfred</code> 这个定制的功能也非常强大。比自带<code>Spotlight</code>功能优化很多。推荐使用</p>

<h3>BT种子下载</h3>

<p><code>uTorrent</code>
<code>迅雷</code></p>

<h3>思维导图工具</h3>

<p><code>XMind</code></p>

<h3>流程图工具</h3>

<p><code>OmniGraffle</code></p>

<h3>Git托管工具</h3>

<p><code>SourceTree</code>
<code>Github Desktop</code></p>

<h3>原型工具</h3>

<p><code>Axure RP Pro</code></p>

<h3>Mac软件安装工具</h3>

<p><code>Ports</code>
<code>Homebrew</code></p>

<h3>虚拟机安装工具</h3>

<p><code>Parallels Desktop</code></p>

<h3>解压缩软件</h3>

<p><code>iZip Unarchiver</code>
<code>The Unarchiver</code></p>

<h3>抓包工具</h3>

<p><code>Charles</code>, 非常好用，抓取移动端包非常方便
<code>WireShark</code></p>

<h3>MySQl连接客户端</h3>

<p><code>navcat for MySQL</code>
<code>Sequel Pro</code></p>

<h3>系统管理软件</h3>

<p><code>CleanMyMac</code></p>

<h2>hosts管理工具</h2>

<p><code>gasmask</code>
<code>ihosts</code></p>

<h3>浏览器</h3>

<p><code>Chrome 强烈推荐</code>
<code>Firefox</code>
<code>Opera</code></p>

<h3>小工具软件</h3>

<p><code>Sip颜色提取软件</code>
<code>Gas Mask</code> （mac hosts文件管理工具）
<code>XtraFinder</code> (Finder 增强工具)
<code>android 文件传输</code>
<code>AirDroid</code>手机、Mac连接工具
<code>cheatSheet</code> 快捷键查找工具
<code>欧陆词典</code>
Taxera NTFS  读写NTF格式的磁盘。<a href="http://www.tuxera.com/products/tuxera-ntfs-for-mac/">官网</a>， 推荐使用
<code>jenv</code> 一个命令行上java版本管理的软件 <a href="http://www.jenv.be">安装方法</a></p>

<h3>未完&hellip;</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask项目部署]]></title>
    <link href="http://lvzwq.github.io/blog/2015/12/25/flaskxiang-mu-bu-shu/"/>
    <updated>2015-12-25T23:13:07+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/12/25/flaskxiang-mu-bu-shu</id>
    <content type="html"><![CDATA[<!--more-->


<h2>使用<code>gunicorn</code>部署<code>Flask</code>项目</h2>

<p>添加项目中使用到<code>python</code>第三方扩展，如果使用<code>virtualenv</code>的话，可以在虚拟环境中使用<code>pip freeze</code>命令直接导出。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pip freeze &gt; requirements.txt
</span></code></pre></td></tr></table></div></figure>


<p>如下是所需要的扩展。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">Flask</span><span class="o">==</span>0.10.1
</span><span class='line'><span class="nv">Jinja2</span><span class="o">==</span>2.7.3
</span><span class='line'><span class="nv">PyYAML</span><span class="o">==</span>3.11
</span><span class='line'><span class="nv">SQLAlchemy</span><span class="o">==</span>1.0.4
</span><span class='line'><span class="nv">Werkzeug</span><span class="o">==</span>0.9.6
</span><span class='line'><span class="nv">requests</span><span class="o">==</span>2.2.1
</span><span class='line'><span class="nv">ConfigParser</span><span class="o">==</span>3.5.0b2
</span><span class='line'><span class="nv">gunicorn</span><span class="o">==</span>19.4.1
</span><span class='line'><span class="nv">uWSGI</span><span class="o">==</span>2.0.11.2
</span></code></pre></td></tr></table></div></figure>


<p>可以先在本地搭建一下服务。使用<code>docker</code>的话，其实就是把这个服务放在一个容器中，使用一个端口与本机交互。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pip install -r requirements.txt  <span class="c">#安装扩展</span>
</span><span class='line'>gunicorn -w <span class="m">4</span> helper:app -b :8000  <span class="c"># 启动服务,服务端口为8000</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>gunicorn</code>启动命令中, <code>-w 4</code>表示启动进程数量，<code>-b</code>表示绑定的主机和端口,默认是<code>127.0.0.1:8000</code>。详细的配置参考<a href="http://docs.gunicorn.org/en/latest/settings.html">http://docs.gunicorn.org/en/latest/settings.html</a>,
其中<code>helper:app</code>分别表示<code>helper.py</code>中的<code>app</code>应用</p>

<p><code>helper.py</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># coding: utf-8</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">main</span> <span class="kn">import</span> <span class="n">create_app</span>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">create_app</span><span class="p">()</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'><span class="c"># app.run(host=&quot;0.0.0.0&quot;, port=5000)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>create_app</code>已经初始化<code>Flask</code>配置了。</p>

<h3>使用<code>gunicorn</code>过程中的注意事项:</h3>

<ul>
<li>要将<code>app.run()</code>注释掉。
如果没有注释的话，会出现下面这种错误。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">10</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51268</span><span class="p">]</span> <span class="p">[</span><span class="n">INFO</span><span class="p">]</span> <span class="n">Starting</span> <span class="n">gunicorn</span> <span class="mf">19.4</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">10</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51268</span><span class="p">]</span> <span class="p">[</span><span class="n">INFO</span><span class="p">]</span> <span class="n">Listening</span> <span class="n">at</span><span class="p">:</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8004</span> <span class="p">(</span><span class="mi">51268</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">10</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51268</span><span class="p">]</span> <span class="p">[</span><span class="n">INFO</span><span class="p">]</span> <span class="n">Using</span> <span class="n">worker</span><span class="p">:</span> <span class="n">sync</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">10</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51271</span><span class="p">]</span> <span class="p">[</span><span class="n">INFO</span><span class="p">]</span> <span class="n">Booting</span> <span class="n">worker</span> <span class="k">with</span> <span class="n">pid</span><span class="p">:</span> <span class="mi">51271</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Running</span> <span class="n">on</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">5000</span><span class="o">/</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Restarting</span> <span class="k">with</span> <span class="n">reloader</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">11</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">INFO</span><span class="p">]</span> <span class="n">Starting</span> <span class="n">gunicorn</span> <span class="mf">19.4</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">11</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Connection</span> <span class="ow">in</span> <span class="n">use</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">11</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Retrying</span> <span class="ow">in</span> <span class="mi">1</span> <span class="n">second</span><span class="o">.</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">12</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Connection</span> <span class="ow">in</span> <span class="n">use</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">12</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Retrying</span> <span class="ow">in</span> <span class="mi">1</span> <span class="n">second</span><span class="o">.</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">13</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Connection</span> <span class="ow">in</span> <span class="n">use</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">)</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">13</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Retrying</span> <span class="ow">in</span> <span class="mi">1</span> <span class="n">second</span><span class="o">.</span>
</span><span class='line'><span class="p">[</span><span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">25</span> <span class="mi">13</span><span class="p">:</span><span class="mo">05</span><span class="p">:</span><span class="mi">14</span> <span class="o">+</span><span class="mi">0800</span><span class="p">]</span> <span class="p">[</span><span class="mi">51272</span><span class="p">]</span> <span class="p">[</span><span class="n">ERROR</span><span class="p">]</span> <span class="n">Connection</span> <span class="ow">in</span> <span class="n">use</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;&#39;</span><span class="p">,</span> <span class="mi">8000</span><span class="p">)</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>启动命令中使用<code>-b :8000</code>
如果使用</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">gunicorn</span> <span class="o">-</span><span class="n">w</span> <span class="mi">4</span> <span class="o">-</span><span class="n">b</span> <span class="mf">127.0</span><span class="o">.</span><span class="mf">0.1</span><span class="p">:</span><span class="mi">8000</span> <span class="n">helper</span><span class="p">:</span><span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>在浏览器中就只能通过<code>localhost:8000</code>或者<code>127.0.0.1:8000</code>访问了，而不能直接通过<code>ip</code>访问。
应该设置为:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">gunicorn</span> <span class="o">-</span><span class="n">w</span> <span class="mi">4</span> <span class="o">-</span><span class="n">b</span> <span class="p">:</span><span class="mi">8000</span> <span class="n">helper</span><span class="p">:</span><span class="n">app</span>
</span><span class='line'><span class="err">或者</span>
</span><span class='line'><span class="n">gunicorn</span> <span class="o">-</span><span class="n">w</span> <span class="mi">4</span> <span class="o">-</span><span class="n">b</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8000</span> <span class="n">helper</span><span class="p">:</span><span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在开始将这个简单的项目部署到<code>docker</code>中,
首先看项目目录结构</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">.</span>
</span><span class='line'><span class="err">├──</span> <span class="n">README</span><span class="o">.</span><span class="n">md</span>
</span><span class='line'><span class="err">├──</span> <span class="n">config</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">__init__</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">│  </span> <span class="err">└──</span> <span class="n">helper</span><span class="o">.</span><span class="n">conf</span>
</span><span class='line'><span class="err">├──</span> <span class="n">helper</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">├──</span> <span class="n">library</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">__init__</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">curl</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">├──</span> <span class="n">main</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">__init__</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">│  </span> <span class="err">├──</span> <span class="n">car</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="err">├──</span> <span class="n">static</span>
</span><span class='line'><span class="err">├──</span> <span class="n">templates</span>
</span><span class='line'><span class="err">└──</span> <span class="n">uwsgi</span><span class="o">.</span><span class="n">ini</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>添加<code>Dockerfile</code>文件</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">cd</span> <span class="o">/</span><span class="n">path</span><span class="o">/</span><span class="n">to</span><span class="o">/</span><span class="n">project</span>
</span><span class='line'><span class="n">touch</span> <span class="n">Dockerfile</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 添加以下内容</span>
</span><span class='line'><span class="n">FROM</span> <span class="n">daocloud</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">python</span><span class="p">:</span><span class="mf">2.7</span>
</span><span class='line'><span class="n">RUN</span> <span class="n">mkdir</span> <span class="o">/</span><span class="n">code</span>
</span><span class='line'><span class="n">WORKDIR</span> <span class="o">/</span><span class="n">code</span>
</span><span class='line'><span class="n">ADD</span> <span class="n">requirements</span><span class="o">.</span><span class="n">txt</span> <span class="o">/</span><span class="n">code</span><span class="o">/</span><span class="n">requirements</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">RUN</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="o">/</span><span class="n">code</span><span class="o">/</span><span class="n">requirements</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">COPY</span> <span class="o">.</span> <span class="o">/</span><span class="n">code</span>
</span><span class='line'><span class="n">COPY</span> <span class="n">docker</span><span class="o">-</span><span class="n">entrypoint</span><span class="o">.</span><span class="n">sh</span> <span class="n">docker</span><span class="o">-</span><span class="n">entrypoint</span><span class="o">.</span><span class="n">sh</span>
</span><span class='line'><span class="n">RUN</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="n">docker</span><span class="o">-</span><span class="n">entrypoint</span><span class="o">.</span><span class="n">sh</span>
</span><span class='line'><span class="n">EXPOSE</span> <span class="mi">8000</span>
</span><span class='line'>
</span><span class='line'><span class="n">CMD</span> <span class="o">/</span><span class="n">code</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">entrypoint</span><span class="o">.</span><span class="n">sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>项目服务启动的端口为8000，所以暴露8000端口，供主机访问</p>

<ol>
<li>添加启动文件<code>docker-entrypoint.sh</code></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">gunicorn</span> <span class="o">-</span><span class="n">w</span> <span class="mi">4</span> <span class="o">-</span><span class="n">b</span> <span class="p">:</span><span class="mi">8000</span> <span class="n">helper</span><span class="p">:</span><span class="n">app</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>将当前项目生成镜像</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">docker</span> <span class="n">build</span> <span class="o">-</span><span class="n">t</span> <span class="n">helper</span> <span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>使用生成的镜像启动容器</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">docker</span> <span class="n">run</span> <span class="o">-</span><span class="n">p</span> <span class="mi">8090</span><span class="p">:</span><span class="mi">8000</span> <span class="n">helper</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以加上<code>-d</code>参数使项目在后台运行。可以直接在浏览器中通过
<code>http://主机ip:8090</code>访问项目了。之后可以直接设置<code>nginx</code>转发端口来绑定域名。</p>

<h2>使用<code>uWSGI</code>来部署<code>Flask</code>项目</h2>

<p><code>Centos</code>上安装<code>uWSGI</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">yum</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">python</span> <span class="n">python</span><span class="o">-</span><span class="n">devel</span> <span class="n">uwsgi</span><span class="o">-</span><span class="n">plugin</span><span class="o">-</span><span class="n">python</span>
</span><span class='line'><span class="n">pip</span> <span class="n">install</span> <span class="n">uwsgi</span>
</span></code></pre></td></tr></table></div></figure>


<p>直接命令行启动服务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">uwsgi</span> <span class="o">--</span><span class="n">http</span><span class="o">-</span><span class="n">socket</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8000</span> <span class="o">--</span><span class="n">plugins</span> <span class="n">python</span> <span class="o">-</span><span class="n">w</span> <span class="n">helper</span><span class="p">:</span><span class="n">app</span>
</span><span class='line'><span class="err">或者</span>
</span><span class='line'><span class="n">uwsgi</span> <span class="o">--</span><span class="n">http</span><span class="o">-</span><span class="n">socket</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8000</span> <span class="o">--</span><span class="n">plugins</span> <span class="n">python</span> <span class="o">--</span><span class="n">module</span> <span class="n">helper</span> <span class="o">--</span><span class="nb">callable</span> <span class="n">app</span> <span class="o">--</span><span class="n">master</span> <span class="o">--</span><span class="n">processes</span> <span class="mi">4</span> <span class="o">--</span><span class="n">enable</span><span class="o">-</span><span class="n">threads</span> <span class="o">--</span><span class="n">threads</span> <span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用<code>INI</code>配置文件, <code>helper.ini</code>如下</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">[</span><span class="n">uwsgi</span><span class="p">]</span>
</span><span class='line'><span class="c"># uwsgi 启动时所使用的地址与端口</span>
</span><span class='line'><span class="n">socket</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8000</span>
</span><span class='line'><span class="c"># 或者</span>
</span><span class='line'><span class="n">http</span><span class="o">-</span><span class="n">socket</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">.</span><span class="mf">0.0</span><span class="p">:</span><span class="mi">8000</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 指向网站目录</span>
</span><span class='line'><span class="n">chdir</span> <span class="o">=</span> <span class="o">/</span><span class="n">root</span><span class="o">/</span><span class="n">helper</span>
</span><span class='line'>
</span><span class='line'><span class="n">plugin</span> <span class="o">=</span> <span class="n">python</span>
</span><span class='line'>
</span><span class='line'><span class="c"># python 启动程序文件</span>
</span><span class='line'><span class="n">wsgi</span><span class="o">-</span><span class="nb">file</span> <span class="o">=</span> <span class="n">helper</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>
</span><span class='line'><span class="c"># python 程序内用以启动的 app 变量名</span>
</span><span class='line'><span class="nb">callable</span> <span class="o">=</span> <span class="n">app</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 处理器数</span>
</span><span class='line'><span class="n">processes</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 线程数</span>
</span><span class='line'><span class="n">threads</span> <span class="o">=</span> <span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行启动命令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">uwsgi</span> <span class="o">-</span><span class="n">i</span> <span class="n">helper</span><span class="o">.</span><span class="n">ini</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用<code>XML</code>配置文件</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;uwsgi&gt;</span>
</span><span class='line'>    <span class="nt">&lt;chdir&gt;</span>/root/helper<span class="nt">&lt;/chdir&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- 项目对应的文件夹 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pythonpath&gt;</span>/root/helper<span class="nt">&lt;/pythonpath&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>python<span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- 对应helper.py --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;module&gt;</span>helper<span class="nt">&lt;/module&gt;</span>
</span><span class='line'>    <span class="nt">&lt;callable&gt;</span>app<span class="nt">&lt;/callable&gt;</span>
</span><span class='line'>    <span class="nt">&lt;master/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;socket&gt;</span>/tmp/helper.sock<span class="nt">&lt;/socket&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- 或者使用 --&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- &lt;http-socket&gt;0.0.0.0:8000&lt;/http-socket&gt; --&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- 使用虚拟环境--&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- &lt;virtualenv&gt;/root/helper/env/&lt;/virtualenv&gt; --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uid&gt;</span>root<span class="nt">&lt;/uid&gt;</span>
</span><span class='line'>    <span class="nt">&lt;gid&gt;</span>root<span class="nt">&lt;/gid&gt;</span>
</span><span class='line'>    <span class="nt">&lt;chmod-socket&gt;</span>644<span class="nt">&lt;/chmod-socket&gt;</span>
</span><span class='line'>    <span class="nt">&lt;chown-socket&gt;</span>root<span class="nt">&lt;/chown-socket&gt;</span>
</span><span class='line'>    <span class="nt">&lt;enable-threads&gt;</span>true<span class="nt">&lt;/enable-threads&gt;</span>
</span><span class='line'>    <span class="nt">&lt;processes&gt;</span>4<span class="nt">&lt;/processes&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- 后台运行，打印日志 --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;daemonize&gt;</span>/root/helper/logs/%n.log<span class="nt">&lt;/daemonize&gt;</span>
</span><span class='line'>    <span class="nt">&lt;memory-report/&gt;</span>
</span><span class='line'><span class="nt">&lt;/uwsgi&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行启动命令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>uwsgi -x helper.xml
</span></code></pre></td></tr></table></div></figure>


<h3>使用<code>uWSGI</code>注意事项</h3>

<ol>
<li>在<code>helper.py</code>中不要加<code>app.run()</code>
如果加上<code>app.run()</code>,会出现以下错误<code>unable to load configuration from uwsgi</code></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>your mercy for graceful operations on workers is 60 seconds
</span><span class='line'>mapped 363840 bytes (355 KB) for 4 cores
</span><span class='line'>*** Operational MODE: preforking ***
</span><span class='line'>added /root/helper/ to pythonpath.
</span><span class='line'> * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
</span><span class='line'> * Restarting with stat
</span><span class='line'>unable to load configuration from uwsgi
</span></code></pre></td></tr></table></div></figure>


<p>另外，在<code>helper.py</code>中，在<code>if __name__ == '__main__':</code>中的内容不会加载。</p>

<ol>
<li>在配置内容中需要加上<code>uWSGI</code>对<code>Python</code>的支持</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugins&gt;</span>python<span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>或者 ini文件中
</span><span class='line'>plugins = python
</span></code></pre></td></tr></table></div></figure>


<p>没有加上，可能会出现</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>unable to load app 0 (mountpoint=&#39;&#39;) (callable not found or import error)
</span><span class='line'>*** no app loaded. going in full dynamic mode ***
</span><span class='line'>*** uWSGI is running in multiple interpreter mode ***
</span></code></pre></td></tr></table></div></figure>


<p>但是有的时候，也说可以不用加上，这个视情况而定。
还有一种情况，是出现<code>uWSGI</code>对<code>Python</code>的扩展没有安装，错误如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>[uWSGI] parsing config file uwsgi.xml
</span><span class='line'>!!! UNABLE to load uWSGI plugin: dlopen(./python_plugin.so, 10): image not found !!!
</span></code></pre></td></tr></table></div></figure>


<p>在<code>Centos</code>执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>yum install -y uwsgi-plugin-python
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><a href="http://stackoverflow.com/questions/15878176/uwsgi-invalid-request-block-size"><code>invalid request block size: 21573 (max 4096)...skip</code></a>
uWSGI日志如下</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>WSGI app 0 (mountpoint=&#39;&#39;) ready in 1 seconds on interpreter 0x1c32840 pid: 22461 (default app)
</span><span class='line'>mountpoint  already configured. skip.
</span><span class='line'>spawned uWSGI worker 1 (pid: 22461, cores: 2)
</span><span class='line'>spawned uWSGI worker 2 (pid: 22466, cores: 2)
</span><span class='line'>spawned uWSGI worker 3 (pid: 22467, cores: 2)
</span><span class='line'>spawned uWSGI worker 4 (pid: 22468, cores: 2)
</span><span class='line'>invalid request block size: 21573 (max 4096)...skip
</span><span class='line'>invalid request block size: 21573 (max 4096)...skip
</span></code></pre></td></tr></table></div></figure>


<p>这个是因为在<code>uWSGI</code>配置文件中，设置了<code>socket</code>配置项为<code>0.0.0.0:8000</code>或者<code>socket</code>为<code>/tmp/uwsgi.sock</code>， 这样设置是不能通过浏览器访问的，还需要绑定<code>nginx</code>转发。可以将<code>socket</code>改为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;http-socket&gt;</span>0.0.0.0:8000<span class="nt">&lt;/http-socket&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样可以直接通过<code>IP:8000</code>直接访问。</p>

<h2>使用<code>nginx</code>代理</h2>

<p>设置的是<code>socket</code>的话，<code>nginx</code>配置如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>server {
</span><span class='line'>        listen 80;
</span><span class='line'>        server_name www.example.com;
</span><span class='line'>        access_log /var/log/nginx/www.example.com/access.log;
</span><span class='line'>        error_log /var/log/nginx/www.example.com/error.log;
</span><span class='line'>        location / {
</span><span class='line'>                include uwsgi_params;
</span><span class='line'>                uwsgi_pass 0.0.0.0:8000;
</span><span class='line'>              # uwsgi_pass unix:/tmp/helper.sock;
</span><span class='line'>        }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>如果使用了<code>http-socket</code>的话，这种可以直接在浏览器中直接<code>IP</code>访问，可以直接设置代理。也可以把服务部署在<code>docker</code>中，使用上面的配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>server {
</span><span class='line'>    listen 80;
</span><span class='line'>    server_name www.example.com;
</span><span class='line'>    access_log /var/log/nginx/www.example.com/access.log;
</span><span class='line'>    error_log /var/log/nginx/www.example.com/error.log;
</span><span class='line'>
</span><span class='line'>    error_page   500 502 503 504  /50x.html;
</span><span class='line'>
</span><span class='line'>    location / {
</span><span class='line'>        proxy_pass              http://localhost:8090;
</span><span class='line'>        proxy_set_header        Host $host;
</span><span class='line'>        proxy_set_header        X-Forwarded-Proto $scheme;
</span><span class='line'>        proxy_set_header        X-Real-IP $remote_addr;
</span><span class='line'>        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>        proxy_buffering off;
</span><span class='line'>        add_header X-Accel-Buffering no;
</span><span class='line'>    }
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Centos上Docker初体验]]></title>
    <link href="http://lvzwq.github.io/blog/2015/12/24/centosshang-dockerchu-ti-yan/"/>
    <updated>2015-12-24T23:10:21+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/12/24/centosshang-dockerchu-ti-yan</id>
    <content type="html"><![CDATA[<!--more-->


<p>Docker 依赖64位Centos系统。Centos 7内核至少为3.10.
通过<code>uname -r</code>查看内核版本，如果没有达到要求，可以参考<a href="http://dl528888.blog.51cto.com/2382721/1609850">Centos7升级内核到3.18的方法</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 导入key
</span><span class='line'>rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
</span><span class='line'>
</span><span class='line'># 安装elrepo的yum源
</span><span class='line'>rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
</span><span class='line'>
</span><span class='line'># 安装内核
</span><span class='line'>yum --enablerepo=elrepo-kernel install  kernel-ml-devel kernel-ml -y
</span><span class='line'>
</span><span class='line'># 查看内核版本
</span><span class='line'>awk -F\' '$1=="menuentry " {print $2}' /etc/grub2.cfg
</span><span class='line'># 修改默认启动顺序
</span><span class='line'>grub2-set-default 0
</span><span class='line'>
</span><span class='line'># 重启
</span><span class='line'>reboot</span></code></pre></td></tr></table></div></figure>


<h3>Docker 入门</h3>

<p>可以花几分钟看完这个<a href="http://dockerpool.com/static/books/docker_practice/introduction/what.html">Docker 简介</a>， 算对Docker有一个初步的认识了。</p>

<p>先简要介绍Docker的几个指令。</p>

<p><code>docker info</code>，查看docker 当前的运行状态</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Containers: 1
</span><span class='line'>Images: 4
</span><span class='line'>Server Version: 1.9.1
</span><span class='line'>Storage Driver: aufs
</span><span class='line'> Root Dir: /mnt/sda1/var/lib/docker/aufs
</span><span class='line'> Backing Filesystem: extfs
</span><span class='line'> Dirs: 6
</span><span class='line'> Dirperm1 Supported: true
</span><span class='line'>Execution Driver: native-0.2
</span><span class='line'>Logging Driver: json-file
</span><span class='line'>Kernel Version: 4.1.13-boot2docker
</span><span class='line'>Operating System: Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015
</span><span class='line'>CPUs: 1
</span><span class='line'>Total Memory: 996.2 MiB
</span><span class='line'>Name: default
</span><span class='line'>ID: KJEU:PWWQ:O7P2:M7YY:KGMN:CCO5:Q3SO:YXLC:LXWY:PQ2R:QXMQ:ABAL
</span><span class='line'>.....</span></code></pre></td></tr></table></div></figure>


<p><code>docker</code> 命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Options:
</span><span class='line'>
</span><span class='line'>  --config=~/.docker              Location of client config files
</span><span class='line'>  -D, --debug=false               Enable debug mode
</span><span class='line'>  -H, --host=[]                   Daemon socket(s) to connect to
</span><span class='line'>  -h, --help=false                Print usage
</span><span class='line'>  -l, --log-level=info            Set the logging level
</span><span class='line'>  --tls=false                     Use TLS; implied by --tlsverify
</span><span class='line'>  --tlscacert=~/.docker/ca.pem    Trust certs signed only by this CA
</span><span class='line'>  --tlscert=~/.docker/cert.pem    Path to TLS certificate file
</span><span class='line'>  --tlskey=~/.docker/key.pem      Path to TLS key file
</span><span class='line'>  --tlsverify=false               Use TLS and verify the remote
</span><span class='line'>  -v, --version=false             Print version information and quit
</span><span class='line'>
</span><span class='line'>Commands:
</span><span class='line'>    attach    Attach to a running container
</span><span class='line'>    build     Build an image from a Dockerfile
</span><span class='line'>    commit    Create a new image from a container's changes
</span><span class='line'>    cp        Copy files/folders from a container to a HOSTDIR or to STDOUT
</span><span class='line'>    create    Create a new container
</span><span class='line'>    diff      Inspect changes on a container's filesystem
</span><span class='line'>    events    Get real time events from the server
</span><span class='line'>    exec      Run a command in a running container
</span><span class='line'>    export    Export a container's filesystem as a tar archive
</span><span class='line'>    history   Show the history of an image
</span><span class='line'>    images    List images
</span><span class='line'>    import    Import the contents from a tarball to create a filesystem image
</span><span class='line'>    info      Display system-wide information
</span><span class='line'>    inspect   Return low-level information on a container or image
</span><span class='line'>    kill      Kill a running container
</span><span class='line'>    load      Load an image from a tar archive or STDIN
</span><span class='line'>    login     Register or log in to a Docker registry
</span><span class='line'>    logout    Log out from a Docker registry
</span><span class='line'>    logs      Fetch the logs of a container
</span><span class='line'>    pause     Pause all processes within a container
</span><span class='line'>    port      List port mappings or a specific mapping for the CONTAINER
</span><span class='line'>    ps        List containers
</span><span class='line'>    pull      Pull an image or a repository from a registry
</span><span class='line'>    push      Push an image or a repository to a registry
</span><span class='line'>    rename    Rename a container
</span><span class='line'>    restart   Restart a running container
</span><span class='line'>    rm        Remove one or more containers
</span><span class='line'>    rmi       Remove one or more images
</span><span class='line'>    run       Run a command in a new container
</span><span class='line'>    save      Save an image(s) to a tar archive
</span><span class='line'>    search    Search the Docker Hub for images
</span><span class='line'>    start     Start one or more stopped containers
</span><span class='line'>    stats     Display a live stream of container(s) resource usage statistics
</span><span class='line'>    stop      Stop a running container
</span><span class='line'>    tag       Tag an image into a repository
</span><span class='line'>    top       Display the running processes of a container
</span><span class='line'>    unpause   Unpause all processes within a container
</span><span class='line'>    version   Show the Docker version information
</span><span class='line'>    wait      Block until a container stops, then print its exit code
</span><span class='line'>
</span><span class='line'>Run 'docker COMMAND --help' for more information on a command.</span></code></pre></td></tr></table></div></figure>


<h4>创建容器</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker run -i -t ubuntu /bin/bash
</span><span class='line'>Unable to find image 'ubuntu:latest' locally
</span><span class='line'>14dab3d40372: Download complete
</span><span class='line'>47d44cb6f252: Download complete
</span><span class='line'>245bcdbcd071: Download complete
</span><span class='line'>a57086046415: Download complete
</span><span class='line'>8031fc57486d: Download complete
</span><span class='line'>abe620e04d9d: Download complete
</span><span class='line'>Status: Downloaded newer image for docker.io/ubuntu:latest</span></code></pre></td></tr></table></div></figure>


<p>该命令会使用<code>Ubuntu</code>的镜像创建一个新的容器。<code>-i</code>表示Keep STDIN open even if not attached。<code>-t</code>表示Allocate a pseudo-TTY，它告诉Docker为要创建的容器分配一个伪tty终端。这样，新创建的容器才能提供一个交互式shell。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@b874901e2f5b:/#</span></code></pre></td></tr></table></div></figure>


<p>容器的主机名就是容器的ID。当前处于容器内<code>shell</code>状态，输入<code>exit</code>可以退出容器，退出容器后，容器也就停止了。</p>

<h4>查看容器和镜像</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker images
</span><span class='line'>REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
</span><span class='line'>docker.io/centos    latest              14dab3d40372        5 days ago          194.7 MB
</span><span class='line'>docker.io/ubuntu    latest              d55e68e6cc9c        12 days ago         187.9 MB
</span><span class='line'>
</span><span class='line'>$ docker ps -a
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
</span><span class='line'>8e24480e37b9        centos              "/bin/bash"         5 minutes ago       Exited (0) 2 minutes ago                       distracted_aryabhata
</span><span class='line'>b874901e2f5b        ubuntu              "/bin/bash"         33 hours ago        Exited (0) 7 minutes ago                       cocky_yonath</span></code></pre></td></tr></table></div></figure>


<p>从该命令的输出结果中我们可以看到关于这个容器的很多有用信息：ID、用于创建该容器的镜像、容器最后执行的命令、创建时间以及容器的退出状态（在上面的例子中，退出状态是0，因为容器是通过正常的exit命令退出的）。我们还可以看到，每个容器都有一个名称。</p>

<p><code>docker images</code> 会展示当前的所有基础镜像。<code>docker ps</code> 显示当前所有运行的容器，加上<code>-a</code>表示所有的容器。</p>

<blockquote><p>有三种方式可以指代唯一容器：短UUID（如b874901e2f5b）、长UUID（如f7cbdac22a02e03c9438c729345e54db9d20cfa2ac1fc3494b6eb60872e74778）或者名称（如cocky_yonath）。</p></blockquote>

<p><code>docker start containerID</code> 启动已经停止运行的容器
<code>docker stop containerID</code> 停止正在运行的容器
<code>docker pull ubuntu:latest</code>从远程仓库下载最新的Ubuntu版本镜像
<code>docker attach containID</code> 附着到容器上。如果是容器镜像是系统，将进入容器<code>Shell</code>模式。</p>

<h3>查看容器内容运行情况</h3>

<p>我们可以用 <code>docker logs containerID</code>获取容器内部运行的日志。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker logs 9a0f7279429b
</span><span class='line'>[23/Dec/2015 00:06:01]"GET /tree HTTP/1.1" 404 2083
</span><span class='line'>[23/Dec/2015 00:06:03]"GET /favicon.ico HTTP/1.1" 404 2104
</span><span class='line'>[23/Dec/2015 00:06:07]"GET / HTTP/1.1" 200 1176
</span><span class='line'>[23/Dec/2015 00:06:07]"GET /static/main.css HTTP/1.1" 200 55
</span><span class='line'>[23/Dec/2015 00:06:18]"GET / HTTP/1.1" 200 1176
</span><span class='line'>[23/Dec/2015 00:06:56]"GET / HTTP/1.1" 200 1176
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>加上<code>-f</code>参数，监控<code>docker logs</code>日志。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker logs -f 9a0f7279429b
</span><span class='line'>
</span><span class='line'>docker logs --tail 10 9a0f7279429b 获取最后10行的日志</span></code></pre></td></tr></table></div></figure>


<h3>查看容器内的进程</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker top containerID</span></code></pre></td></tr></table></div></figure>


<h3>在容器内部运行程序</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker exec 57010f2568a2 mysql --version
</span><span class='line'>docker exec 57010f2568a2 echo "hello world"</span></code></pre></td></tr></table></div></figure>


<h3>深入容器</h3>

<p>我们可以用<code>docker inspect containerID</code>获取容器更多地信息。
<code>docker inspect</code>命令会对容器进行详细的检查，然后返回其配置信息，包括名称、命令、网络配置以及很多有用的数据。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker inspect 4220b7df2d23
</span><span class='line'>[
</span><span class='line'>{
</span><span class='line'>    "Id": "4220b7df2d23b23b3ecbab8ec86ad37b2f48d5830178b6353cd4fbbdab83bf58",
</span><span class='line'>    "Created": "2015-12-19T19:03:36.639252716Z",
</span><span class='line'>    "Path": "/bin/bash",
</span><span class='line'>    "Args": [],
</span><span class='line'>    "State": {
</span><span class='line'>        "Status": "running",
</span><span class='line'>        "Running": true,
</span><span class='line'>        "Paused": false,
</span><span class='line'>        "Restarting": false,
</span><span class='line'>        "OOMKilled": false,
</span><span class='line'>        "Dead": false,
</span><span class='line'>        "Pid": 28778,
</span><span class='line'>        "ExitCode": 0,
</span><span class='line'>        "Error": "",
</span><span class='line'>        "StartedAt": "2015-12-23T02:45:56.725884626Z",
</span><span class='line'>        "FinishedAt": "2015-12-23T02:40:46.344221213Z"
</span><span class='line'>    },
</span><span class='line'>    "Image": "89d5d8e8bafb6e279fa70ea444260fa61cc7c5c7d93eff51002005c54a49c918",
</span><span class='line'>    ...</span></code></pre></td></tr></table></div></figure>


<p>有选择地获取<code>docker inspect</code>中的<code>docker</code>容器信息。<code>-f</code>有选择获取信息。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker inspect --format '' 4220b7df2d23
</span><span class='line'>docker inspect -f '' 4220b7df2d23</span></code></pre></td></tr></table></div></figure>


<h3>使用<code>docker-machine</code>来创建<code>Docker</code>(Mac &amp;&amp; WIN)</h3>

<p><code>Docker</code>官方提供的部署工具。帮助用户快速在运行环境中创建虚拟机服务节点，在虚拟机中安装并配置<code>Docker</code>，最终帮助用户配置<code>Docker Client</code>，使得 <code>Docker Client</code> 有能力与虚拟机中的 Docker 建立通信。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker-machine create -d virtualbox default</span></code></pre></td></tr></table></div></figure>


<p>首先通过 <code>create</code> 命令创建一台名为 <code>default</code> 的 VirtualBox 虚拟机，并已经安装好了 <code>Docker</code>。
激活虚拟机<code>default</code>的环境变量。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> eval "$(docker-machine env default)"</span></code></pre></td></tr></table></div></figure>


<p><code>docker-machine</code> 命令行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>─$ docker-machine --help
</span><span class='line'>Usage: docker-machine [OPTIONS] COMMAND [arg...]
</span><span class='line'>
</span><span class='line'>Create and manage machines running Docker.
</span><span class='line'>
</span><span class='line'>Version: 0.5.4, build 6643d0e
</span><span class='line'>
</span><span class='line'>Author:
</span><span class='line'>  Docker Machine Contributors - &lt;https://github.com/docker/machine&gt;
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  --debug, -D                     Enable debug mode
</span><span class='line'>  -s, --storage-path "/Users/ilovey/.docker/machine"  Configures storage path [$MACHINE_STORAGE_PATH]
</span><span class='line'>  --tls-ca-cert                   CA to verify remotes against [$MACHINE_TLS_CA_CERT]
</span><span class='line'>  --tls-ca-key                        Private key to generate certificates [$MACHINE_TLS_CA_KEY]
</span><span class='line'>  --tls-client-cert                   Client cert to use for TLS [$MACHINE_TLS_CLIENT_CERT]
</span><span class='line'>  --tls-client-key                    Private key used in client TLS auth [$MACHINE_TLS_CLIENT_KEY]
</span><span class='line'>  --github-api-token                  Token to use for requests to the Github API [$MACHINE_GITHUB_API_TOKEN]
</span><span class='line'>  --native-ssh                        Use the native (Go-based) SSH implementation. [$MACHINE_NATIVE_SSH]
</span><span class='line'>  --bugsnag-api-token                     BugSnag API token for crash reporting [$MACHINE_BUGSNAG_API_TOKEN]
</span><span class='line'>  --help, -h                      show help
</span><span class='line'>  --version, -v                       print the version
</span><span class='line'>
</span><span class='line'>Commands:
</span><span class='line'>  active      Print which machine is active
</span><span class='line'>  config      Print the connection config for machine
</span><span class='line'>  create      Create a machine
</span><span class='line'>  env         Display the commands to set up the environment for the Docker client
</span><span class='line'>  inspect     Inspect information about a machine
</span><span class='line'>  ip          Get the IP address of a machine
</span><span class='line'>  kill            Kill a machine
</span><span class='line'>  ls          List machines
</span><span class='line'>  regenerate-certs    Regenerate TLS Certificates for a machine
</span><span class='line'>  restart     Restart a machine
</span><span class='line'>  rm          Remove a machine
</span><span class='line'>  ssh         Log into or run a command on a machine with SSH.
</span><span class='line'>  scp         Copy files between machines
</span><span class='line'>  start           Start a machine
</span><span class='line'>  status      Get the status of a machine
</span><span class='line'>  stop            Stop a machine
</span><span class='line'>  upgrade     Upgrade a machine to the latest version of Docker
</span><span class='line'>  url         Get the URL of a machine
</span><span class='line'>  version     Show the Docker Machine version or a machine docker version
</span><span class='line'>  help            Shows a list of commands or help for one command
</span><span class='line'>
</span><span class='line'>Run 'docker-machine COMMAND --help' for more information on a command.</span></code></pre></td></tr></table></div></figure>


<h4>查看当前正在运行的<code>Machine</code></h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-machine ls
</span><span class='line'>NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER   ERRORS
</span><span class='line'>default   *        virtualbox   Running   tcp://192.168.99.100:2376           v1.9.1</span></code></pre></td></tr></table></div></figure>


<h4>启动虚拟机<code>Machine</code></h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker-machine start default</span></code></pre></td></tr></table></div></figure>


<h4>获取虚拟机<code>Machine</code>的<code>IP</code></h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker-machine ip default</span></code></pre></td></tr></table></div></figure>


<h4>通过<code>SSH</code>进入到虚拟机</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker-machine ssh default
</span><span class='line'>                        ##         .
</span><span class='line'>                  ## ## ##        ==
</span><span class='line'>               ## ## ## ## ##    ===
</span><span class='line'>           /"""""""""""""""""\___/ ===
</span><span class='line'>      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
</span><span class='line'>           \______ o           __/
</span><span class='line'>             \    \         __/
</span><span class='line'>              \____\_______/
</span><span class='line'> _                 _   ____     _            _
</span><span class='line'>| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
</span><span class='line'>| '_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ '__|
</span><span class='line'>| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |
</span><span class='line'>|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
</span><span class='line'>Boot2Docker version 1.9.1, build master : cef800b - Fri Nov 20 19:33:59 UTC 2015
</span><span class='line'>Docker version 1.9.1, build a34a1d5
</span><span class='line'>docker@default:~$</span></code></pre></td></tr></table></div></figure>


<h4>参考</h4>

<p><a href="http://dl528888.blog.51cto.com/2382721/1609850">Centos7升级内核到3.18的方法</a>
<a href="http://www.jianshu.com/p/26f15063de7d">迈出使用Docker的第一步，学习第一个Docker容器</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS动画之Core Animation基础]]></title>
    <link href="http://lvzwq.github.io/blog/2015/12/17/iosdong-hua-zhi-core-animationji-chu/"/>
    <updated>2015-12-17T23:08:04+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/12/17/iosdong-hua-zhi-core-animationji-chu</id>
    <content type="html"><![CDATA[<!--more-->


<p>首先附上一张从网上找到的<code>Core Animation</code>的结构图。
<img src="http://7xig7d.com1.z0.glb.clouddn.com/zwq/core_annimation.jpg" alt="Core Animaion" /></p>

<p><strong>准备</strong>: 使用<code>Core Animation</code>制作动画需要引入<code>QuartzCore.framework</code>库，并在制作动画的地方引入<code>#import &lt;QuartzCore/QuartzCore.h&gt;</code></p>

<h3><code>CABasicAnimation</code>(关键帧动画)</h3>

<p>所谓关键帧动画，就是将<code>Layer</code>的属性作为<code>KeyPath</code>来注册，指定动画的起始帧和结束帧，然后自动计算和实现中间的过渡动画的一种动画方式。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position.x&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="mi">@77</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="mi">@455</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">beginTime</span> <span class="o">=</span> <span class="n">CACurrentMediaTime</span><span class="p">()</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">autoreverses</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">animation</span> <span class="nl">forKey</span><span class="p">:</span><span class="s">@&quot;basic&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>动画属性参数说明:</p>

<ul>
<li><code>keyPath</code>：动画的运动属性。</li>
</ul>


<p>常见的支持有: <a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Key-ValueCodingExtensions/Key-ValueCodingExtensions.html">见官方文档</a></p>

<blockquote><p>平移:
- <code>position</code>(点到点坐标)<br/>
- <code>position.x</code>或者<code>transform.translation.x</code>(x坐标方向的移动)
- <code>position.y</code>或者<code>transform.translation.y</code>(y坐标方向的移动)
缩放:<code>scale</code>
旋转:<code>rotation</code>
- <code>transform.rotation.x</code>(绕x坐标轴旋转)
- <code>transform.rotation.y</code>(绕y坐标轴旋转)</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;position&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;transform.scale&quot;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="s">@&quot;transform.rotation.y&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>duration</code>： 动画持续时间,以秒为单位</li>
<li><code>fromValue</code>： 动画的开始状态(绝对定位)</li>
<li><code>toValue</code>：动画的结束状态(绝对定位)</li>
<li><code>byValue</code>：动画的相对结束位置(相对定位)。</li>
</ul>


<p>动画中<code>fromValue</code> -> <code>toValue</code>表示从开始位置到结束位置(绝对位置)，也可以设定从当前位置到加上<code>byValue</code>(相对位置)。注意 <code>fromValue</code>、<code>toValue</code>和<code>byValue</code>是<code>id</code>类型，如果是基本类型的话，需要转化为OC对应的类类型@。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithFloat</span><span class="p">:</span><span class="mf">50.0</span><span class="p">];</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="mf">@500.0</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">byValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>repeatCount</code>:表示动画重复次数。默认为0，指定为<code>HUGE_VALF</code>， 永久执行.</li>
<li><code>autoreverses</code>:动画结束之后是否执行逆动画。</li>
<li><code>beginTime</code>:指定动画执行的时间。如果需要动画延迟，可以加上<code>CACurrentMediaTime()+ 延迟的秒数</code>。</li>
<li><code>timingFunction</code>: 设定动画的速度变化。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">timingFunction</span> <span class="o">=</span>  <span class="p">[</span><span class="bp">CAMediaTimingFunction</span> <span class="nl">functionWithName</span><span class="p">:</span> <span class="n">kCAMediaTimingFunctionEaseInEaseOut</span><span class="p">];</span> <span class="c1">//先加速后减速</span>
</span></code></pre></td></tr></table></div></figure>


<h6>动画结束之后，动画界面又恢复动画前的状态。要想保持动画后的状态，可以有以下两种方式</h6>

<p><strong>方法一(推荐)</strong>
这种方式有局限性，适用于消失效果的动画。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">layer</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">455</span><span class="p">,</span> <span class="mi">61</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>方法二(通用)</strong>
可以添加以下两行代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForward</span><span class="p">;</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>默认动画执行结束之后，就从渲染树<code>render tree</code>中移除,设置<code>removedOnCompletion</code>为<code>NO</code>,保留渲染后的动画。</p>

<h3><code>CAKeyframeAnimation</code>组合动画</h3>

<p><code>CABasicAnimation</code>动画是一次执行单一效果的动画,<code>CAKeyframeAnimation</code>可以在一次动作中执行多种效果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//为动画图形运动划定运动路线</span>
</span><span class='line'><span class="c1">//定义动画贝塞尔曲线路径</span>
</span><span class='line'><span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="n">bezierPath</span><span class="p">];</span>
</span><span class='line'><span class="c1">//定义起点</span>
</span><span class='line'><span class="p">[</span><span class="n">path</span> <span class="nl">moveToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">150</span><span class="p">)];</span>
</span><span class='line'><span class="c1">//结束点、中间点</span>
</span><span class='line'><span class="p">[</span><span class="n">path</span> <span class="nl">addQuadCurveToPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">270</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span> <span class="nl">controlPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">150</span><span class="p">,</span> <span class="mi">20</span><span class="p">)];</span>
</span><span class='line'><span class="c1">//定义2个路径点</span>
</span><span class='line'><span class="c1">//[path addCurveToPoint:CGPointMake(50, 500) controlPoint1: CGPointMake(350, 400) controlPoint2:CGPointMake(100, 450)];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">CAKeyframeAnimation</span> <span class="o">*</span><span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAKeyframeAnimation</span> <span class="nl">animationWithKeyPath</span><span class="p">:</span><span class="s">@&quot;position&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">path</span><span class="p">.</span><span class="bp">CGPath</span><span class="p">;</span> <span class="c1">//设置路径</span>
</span><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">rotationMode</span> <span class="o">=</span> <span class="n">kCAAnimationRotateAuto</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//放大</span>
</span><span class='line'><span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">expandAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="nl">animationWithKeyPath</span><span class="p">:</span><span class="s">@&quot;transform.scale&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">expandAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mf">0.5f</span><span class="p">;</span>
</span><span class='line'><span class="n">expandAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithFloat</span><span class="p">:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="n">expandAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithFloat</span><span class="p">:</span><span class="mf">2.0f</span><span class="p">];</span>
</span><span class='line'><span class="n">expandAnimation</span><span class="p">.</span><span class="n">timingFunction</span><span class="o">=</span><span class="p">[</span><span class="bp">CAMediaTimingFunction</span> <span class="nl">functionWithName</span><span class="p">:</span><span class="n">kCAMediaTimingFunctionEaseIn</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//缩小</span>
</span><span class='line'><span class="bp">CABasicAnimation</span> <span class="o">*</span><span class="n">narrowAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CABasicAnimation</span> <span class="nl">animationWithKeyPath</span><span class="p">:</span><span class="s">@&quot;transform.scale&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">narrowAnimation</span><span class="p">.</span><span class="n">beginTime</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'><span class="n">narrowAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithFloat</span><span class="p">:</span><span class="mf">2.0f</span><span class="p">];</span>
</span><span class='line'><span class="n">narrowAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mf">1.5f</span><span class="p">;</span>
</span><span class='line'><span class="n">narrowAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithFloat</span><span class="p">:</span><span class="mf">0.5f</span><span class="p">];</span>
</span><span class='line'><span class="n">narrowAnimation</span><span class="p">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAMediaTimingFunction</span> <span class="nl">functionWithName</span><span class="p">:</span><span class="n">kCAMediaTimingFunctionEaseOut</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//添加动画集</span>
</span><span class='line'><span class="bp">CAAnimationGroup</span> <span class="o">*</span><span class="n">groups</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CAAnimationGroup</span> <span class="n">animation</span><span class="p">];</span>
</span><span class='line'><span class="n">groups</span><span class="p">.</span><span class="n">animations</span> <span class="o">=</span> <span class="l">@[</span><span class="n">animation</span><span class="p">,</span><span class="n">expandAnimation</span><span class="p">,</span><span class="n">narrowAnimation</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'><span class="n">groups</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mf">2.0f</span><span class="p">;</span>
</span><span class='line'><span class="n">groups</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="n">groups</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'><span class="n">groups</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">addAnimation</span><span class="p">:</span><span class="n">groups</span> <span class="nl">forKey</span><span class="p">:</span><span class="s">@&quot;group&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>监听动画执行开始和结束的状态</h3>

<p>指定委托对象，实现委托方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">animation</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span> <span class="c1">// 指定委托对象 </span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark CAAnimation Delegate</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">animationDidStart:</span><span class="p">(</span><span class="bp">CAAnimation</span> <span class="o">*</span><span class="p">)</span><span class="nv">anim</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;动画启动&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">animationDidStop:</span><span class="p">(</span><span class="bp">CAAnimation</span> <span class="o">*</span><span class="p">)</span><span class="nv">anim</span> <span class="nf">finished:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">flag</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;动画结束&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>IOS 动画效果的开源库</h3>

<ul>
<li><a href="https://github.com/robb/RBBAnimation">RBBAnimation</a></li>
<li><a href="https://github.com/CanvasPod/Canvas">Canvas</a></li>
<li><a href="https://github.com/facebook/pop">Facebook pop</a></li>
<li><a href="https://github.com/schneiderandre/popping">popping</a></li>
</ul>


<h4>参考:</h4>

<ul>
<li><a href="https://www.objc.io/issues/12-animations/animations-explained/">Animations Explained</a> / <a href="http://objccn.io/issue-12-1/">中文翻译</a></li>
<li><a href="http://blog.csdn.net/iosevanhuang/article/details/14488239">CSDN博客 - CABasicAnimation的基本使用方法（移动·旋转·放大·缩小）</a></li>
</ul>


<h4>深入理解</h4>

<ul>
<li><a href="https://www.objc.io/issues/12-animations/animations-explained/#further-reading">Further Reading</a></li>
<li><a href="http://www.raywenderlich.com/50197/uikit-dynamics-tutorial">UIKit Dynamics</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YII2发送邮件]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/22/yii2fa-song-you-jian/"/>
    <updated>2015-11-22T23:06:47+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/22/yii2fa-song-you-jian</id>
    <content type="html"><![CDATA[<!--more-->


<p><code>YII2</code>是<code>PHP</code>中一个比较流行的WEB框架。
下面来讲一下在<code>YII2</code>中如何配置邮件服务。<code>YII2</code>中默认是使用<code>swiftmailer</code>来发送邮件的。
如果<code>YII2</code>中没有这个扩展，可以使用以下方式安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>php composer.phar require --prefer-dist yiisoft/yii2-swiftmailer
</span></code></pre></td></tr></table></div></figure>


<p>或者添加以下代码到<code>composer.json</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="s2">&quot;yiisoft/yii2-swiftmailer&quot;</span>: <span class="s2">&quot;~2.0.0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后执行<code>composer install</code>命令更新扩展</p>

<p>安装完之后，需要在<code>YII2</code>的配置文件中配置邮箱的基本信息
在<code>config/web.php</code>中添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='Php'><span class='line'><span class="s1">&#39;mailer&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>          <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;yii\swiftmailer\Mailer&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;viewPath&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;@app/mail&#39;</span><span class="p">,</span>  <span class="c1">//配置邮件模板的位置</span>
</span><span class='line'>          <span class="s1">&#39;transport&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>              <span class="s1">&#39;class&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Swift_SmtpTransport&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;host&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;smtp.126.com&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;xxuser@126.com&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;xxpwd&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;port&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;465&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;encryption&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;ssl&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="p">],</span>
</span><span class='line'>          <span class="s1">&#39;useFileTransport&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;messageConfig&#39;</span><span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>                <span class="s1">&#39;charset&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;UTF-8&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;from&#39;</span><span class="o">=&gt;</span><span class="p">[</span><span class="s1">&#39;xxuser@126.com&#39;</span><span class="o">=&gt;</span><span class="s1">&#39;admin&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="p">],</span>
</span><span class='line'>      <span class="p">],</span>
</span></code></pre></td></tr></table></div></figure>


<h2>简单的邮件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Php'><span class='line'><span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">mailer</span><span class="o">-&gt;</span><span class="na">compose</span><span class="p">()</span>
</span><span class='line'>     <span class="o">-&gt;</span><span class="na">setFrom</span><span class="p">(</span><span class="s1">&#39;xxuser@126.com&#39;</span><span class="p">)</span>
</span><span class='line'>     <span class="o">-&gt;</span><span class="na">setTo</span><span class="p">(</span><span class="nv">$mailTo</span><span class="p">)</span>
</span><span class='line'>     <span class="o">-&gt;</span><span class="na">setTextBody</span><span class="p">(</span><span class="s1">&#39;您好， 有邮件来访&#39;</span><span class="p">)</span>   <span class="c1">//发布纯文字文本</span>
</span><span class='line'>     <span class="c1">//-&gt;setHtmlBody(&quot;点击查看&lt;a href=&#39;zwq.bingyan.net&#39;&gt;zwq.bingyan.net&lt;/a&gt;&quot;)    //发布可以带html标签的文本</span>
</span><span class='line'>     <span class="o">-&gt;</span><span class="na">setSubject</span><span class="p">(</span><span class="nv">$subject</span><span class="p">)</span>
</span><span class='line'>     <span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h2>带有模板的邮件</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Php'><span class='line'> <span class="nv">$mail</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">mailer</span><span class="o">-&gt;</span><span class="na">compose</span><span class="p">(</span><span class="s1">&#39;resetPassword&#39;</span><span class="p">,</span> <span class="p">[</span> <span class="s2">&quot;id&quot;</span> <span class="o">=&gt;</span> <span class="mi">123</span><span class="p">,</span> <span class="s2">&quot;key&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;asdsfdgfrtryt124354&quot;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">setFrom</span><span class="p">(</span><span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">params</span><span class="p">[</span><span class="s1">&#39;adminEmail&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">setTo</span><span class="p">(</span><span class="s2">&quot;xxuser@gmail.com&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">setSubject</span><span class="p">(</span><span class="s2">&quot;XX网 | 密码重置&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$mail</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码说明，使用<code>resetPassword.php</code>这个模板,模板文件在刚才配置的<code>viewPath</code>这个目录下。
另外这个模板默认是以一个公共的模板<code>layouts/html.php</code>配置的。发送带有模板的邮件是不需要调用<code>setTextBody</code>和<code>setHtmlBody</code>的。
模板文件目录结构如下所示</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Php'><span class='line'><span class="o">--</span> <span class="nb">mail</span><span class="o">/</span>
</span><span class='line'>    <span class="o">--</span> <span class="nx">layouts</span><span class="o">/</span>
</span><span class='line'>        <span class="o">--</span> <span class="nx">html</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'>    <span class="o">--</span> <span class="nx">resetPassword</span><span class="o">.</span><span class="nx">php</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>html.php</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">use</span> <span class="nx">yii\helpers\Html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* @var $this \yii\web\View view component instance */</span>
</span><span class='line'><span class="cm">/* @var $message \yii\mail\MessageInterface the message being composed */</span>
</span><span class='line'><span class="cm">/* @var $content string main view render result */</span>
</span><span class='line'><span class="nv">$resetURL</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">urlManager</span><span class="o">-&gt;</span><span class="na">createAbsoluteUrl</span><span class="p">([</span><span class="s1">&#39;user/activate&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">beginPage</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=</span><span class="cp">&lt;?</span><span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">charset</span> <span class="cp">?&gt;</span><span class="x">&quot; /&gt;</span>
</span><span class='line'><span class="x">    &lt;title&gt;</span><span class="cp">&lt;?</span><span class="o">=</span> <span class="nx">Html</span><span class="o">::</span><span class="na">encode</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">title</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x">&lt;/title&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;?php</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">head</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;?php</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">beginBody</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;?</span><span class="o">=</span> <span class="nv">$content</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;?php</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">endBody</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">endPage</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p><code>resetPassword.php</code>中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">use</span> <span class="nx">yii\helpers\Html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$resetLink</span> <span class="o">=</span> <span class="nx">Yii</span><span class="o">::</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">urlManager</span><span class="o">-&gt;</span><span class="na">createAbsoluteUrl</span><span class="p">([</span><span class="s1">&#39;user/activate&#39;</span><span class="p">,</span> <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="nv">$id</span><span class="p">,</span> <span class="s2">&quot;key&quot;</span> <span class="o">=&gt;</span> <span class="nv">$key</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;p&gt;尊敬的用户&lt;/p&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;您好!&lt;/p&gt;</span>
</span><span class='line'><span class="x">&lt;b&gt;请点击以下链接重置密码&lt;/b&gt;&lt;br&gt;</span>
</span><span class='line'><span class="x">&lt;a href=&quot;</span><span class="cp">&lt;?</span><span class="o">=</span> <span class="nv">$resetLink</span> <span class="cp">?&gt;</span><span class="x">&quot;&gt;</span><span class="cp">&lt;?</span><span class="o">=</span> <span class="nv">$resetLink</span> <span class="cp">?&gt;</span><span class="x">&lt;/a&gt;</span>
</span><span class='line'><span class="x">&lt;br&gt;&lt;br&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;系统发信，请勿回复&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在<code>resetPassword.php</code>最后解析的<code>html</code>内容会替换到<code>html.php</code>中的<code>$content</code>.
在向模板中传递参数时，是以数组的形式传递的，如上<code>$id</code>, <code>$key</code>和<code>compose</code>中第二个参数保持一致。</p>

<p>根据上面配置会生成
<code>http://www.example.com/user/activite?id=123&amp;key=asdsfdgfrtryt124354</code>
这个链接不够友好，我们可以使Ta更加<code>Restful</code>
<code>http://www.example.com/user/activite/123/asdsfdgfrtryt124354</code>
这样需要在<code>config/web.php</code>中配置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="s1">&#39;urlManager&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>          <span class="s1">&#39;showScriptName&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;enablePrettyUrl&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
</span><span class='line'>          <span class="c1">//&#39;suffix&#39; =&gt; &#39;.htm&#39;,</span>
</span><span class='line'>          <span class="s1">&#39;rules&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>                <span class="s2">&quot;&lt;controller:(user)&gt;/&lt;action:(activate)&gt;/&lt;id:\d+&gt;/&lt;key:\w+&gt;&quot;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&lt;controller&gt;/&lt;action&gt;&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="p">],</span>
</span><span class='line'>      <span class="p">],</span>
</span></code></pre></td></tr></table></div></figure>


<p>更详细，请参考<a href="http://www.yiiframework.com/doc-2.0/ext-swiftmailer-index.html">官方教程</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP7安装OpenSSL扩展]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/21/php7an-zhuang-opensslkuo-zhan/"/>
    <updated>2015-11-21T23:05:31+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/21/php7an-zhuang-opensslkuo-zhan</id>
    <content type="html"><![CDATA[<!--more-->


<p>因为项目中需要发邮件，使用了<code>ssl</code>加密，所以需要<code>PHP</code>对<code>OpenSSL</code>支持。没有这个扩展的话，会报这个错误。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Unable to find the socket transport “ssl” - did you forget to enable it when you configured PHP</span></code></pre></td></tr></table></div></figure>


<p>首先查找PHP中是否已经有这个扩展，是否未加载成功。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php-config70 --extension-dir  
</span><span class='line'>/opt/local/lib/php70/extensions/no-debug-non-zts-20141001
</span><span class='line'>$ cd /opt/local/lib/php70/extensions/no-debug-non-zts-20141001</span></code></pre></td></tr></table></div></figure>


<p>如果没有安装，目录下一版没有<code>openssl.so</code>这个文件。一种简单的安装方法，是从<code>PHP</code>的源码重新编译这个扩展。
到官网<a href="https://downloads.php.net/~ab/">https://downloads.php.net/~ab/</a>下载对应版本的<code>PHP7</code>源码.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget https://downloads.php.net/~ab/php-7.0.0RC6.tar.gz
</span><span class='line'>$ tar zxvf php-7.0.0RC6.tar.gz
</span><span class='line'>$ cd php-7.0.0RC6/ext/openssl</span></code></pre></td></tr></table></div></figure>


<p>在目录下下执行<code>phpize70</code>,会报错。提示使用绝对路径</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /opt/local/bin/phpize70
</span><span class='line'>Cannot find config.m4  # 报错找不到文件
</span><span class='line'>
</span><span class='line'># 然后执行
</span><span class='line'>$ mv config0.m4 config.m4
</span><span class='line'># 再次执行 /opt/local/bin/phpize70
</span><span class='line'>Configuring for:
</span><span class='line'>PHP Api Version:         20131218
</span><span class='line'>Zend Module Api No:      20141001
</span><span class='line'>Zend Extension Api No:   320140815
</span><span class='line'>
</span><span class='line'>## 编译安装,首先找到php-config70文件路径
</span><span class='line'>$ where php-config70
</span><span class='line'>/opt/local/bin/php-config70
</span><span class='line'>$ ./configure --with-php-config=/opt/local/bin/php-config70
</span><span class='line'>$ sudo make & make install</span></code></pre></td></tr></table></div></figure>


<p>安装成功之后，出现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/bin/sh /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/libtool --mode=install cp ./openssl.la /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules
</span><span class='line'>cp ./.libs/openssl.so /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules/openssl.so
</span><span class='line'>cp ./.libs/openssl.lai /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules/openssl.la
</span><span class='line'>----------------------------------------------------------------------
</span><span class='line'>Libraries have been installed in:
</span><span class='line'>   /Users/ilovey/Downloads/php-7.0.0RC6/ext/openssl/modules
</span><span class='line'>
</span><span class='line'>If you ever happen to want to link against installed libraries
</span><span class='line'>in a given directory, LIBDIR, you must either use libtool, and
</span><span class='line'>specify the full pathname of the library, or use the `-LLIBDIR'
</span><span class='line'>flag during linking and do at least one of the following:
</span><span class='line'>   - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable
</span><span class='line'>     during execution
</span><span class='line'>
</span><span class='line'>See any operating system documentation about shared libraries for
</span><span class='line'>more information, such as the ld(1) and ld.so(8) manual pages.
</span><span class='line'>----------------------------------------------------------------------
</span><span class='line'>Installing shared extensions:     /opt/local/lib/php70/extensions/no-debug-non-zts-20141001/</span></code></pre></td></tr></table></div></figure>


<p>此时，会发现<code>/opt/local/lib/php70/extensions/no-debug-non-zts-20141001/</code>目录下多了个<code>openssl.so</code>的文件，我们让<code>PHP</code>将其加载就行.
加载的方式有两种，一种直接在<code>php.ini</code>文件中添加<code>extension=openssl.so</code></p>

<p>另一种方式，查找到PHP配置文件目录</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ php-config70 --configure-options
</span><span class='line'>可以找到如下
</span><span class='line'>--with-config-file-scan-dir=/opt/local/var/db/php70</span></code></pre></td></tr></table></div></figure>


<p>进入可以看到有数个<code>ini</code>文件。添加一个<code>openssl.ini</code>文件，并在其中添加<code>extension=openssl.so</code>.</p>

<p>重启<code>php-fpm</code>,就可以看到扩展加载成功了。</p>

<p>转载自<a href="http://www.52jscn.com/web/2013/05/4592.shtml">php开启openssl的方法</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转载]Objective-C编码规范]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/14/zhuan-zai-objective-cbian-ma-gui-fan/"/>
    <updated>2015-11-14T22:54:19+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/14/zhuan-zai-objective-cbian-ma-gui-fan</id>
    <content type="html"><![CDATA[<!--more-->


<p>转载自<a href="https://github.com/samlaudev/Objective-C-Coding-Style">https://github.com/samlaudev/Objective-C-Coding-Style</a></p>

<p>这篇编码风格指南概括了raywenderlich.com的编码规范，可能有些删减或修改。</p>

<h2>介绍</h2>

<p>我们制定Objective-C编码规范的原因是我们能够在我们的书，教程和初学者工具包的代码保持优雅和一致。即使我们有很多不同的作者来完成不同的书籍。</p>

<p>这里编码规范有可能与你看到的其他Objective-C编码规范不同，因为它主要是为了打印和web的易读性。</p>

<h2>关于作者</h2>

<p>这编码规范的创建是由很多来自raywenderlich.com团队成员在Nicholas Waynik的带领下共同完成的。团队成员有：<a href="https://github.com/moayes">Soheil Moayedi Azarpour</a>, <a href="https://github.com/ricardo-rendoncepeda">Ricardo Rendon Cepeda</a>, <a href="https://github.com/tdahbura">Tony Dahbura</a>, <a href="https://github.com/ColinEberhardt">Colin Eberhardt</a>, <a href="https://github.com/mattjgalloway">Matt Galloway</a>, <a href="https://github.com/gregheo">Greg Heo</a>, <a href="https://github.com/hollance">Matthijs Hollemans</a>, <a href="https://github.com/elephantronic">Christopher LaPollo</a>, <a href="https://github.com/casademora">Saul Mora</a>, <a href="https://github.com/macandyp">Andy Pereira</a>, <a href="https://github.com/micpringle">Mic Pringle</a>, <a href="https://github.com/pietrorea">Pietro Rea</a>, <a href="https://github.com/funkyboy">Cesare Rocchi</a>, <a href="https://github.com/icanzilb">Marin Todorov</a>, <a href="https://github.com/ndubbs">Nicholas Waynik</a>和<a href="https://github.com/raywenderlich">Ray Wenderlich</a></p>

<p>我们也非常感谢<a href="https://github.com/NYTimes/objective-c-style-guide">New York Times</a> 和<a href="https://github.com/RobotsAndPencils/objective-c-style-guide">Robots &amp; Pencils'</a>Objective-C编码规范的作者。这两个编码规范为本指南的创建提供很好的起点。</p>

<h2>背景</h2>

<p>这里有些关于编码风格Apple官方文档，如果有些东西没有提及，可以在以下文档来查找更多细节：</p>

<ul>
<li><a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html">The Objective-C Programming Language</a></li>
<li><a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html">Cocoa Fundamentals Guide</a></li>
<li><a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/CodingGuidelines.html">Coding Guidelines for Cocoa</a></li>
<li><a href="http://developer.apple.com/library/ios/#documentation/iphone/conceptual/iphoneosprogrammingguide/Introduction/Introduction.html">iOS App Programming Guide</a></li>
</ul>


<h2>目录</h2>

<ul>
<li><a href="#language">语言</a></li>
<li><a href="#code-organization">代码组织</a></li>
<li><a href="#spacing">空格</a></li>
<li><a href="#comments">注释</a></li>
<li><a href="#naming">命名</a>

<ul>
<li><a href="#underscores">下划线</a></li>
</ul>
</li>
<li><a href="#methods">方法</a></li>
<li><a href="#variables">变量</a></li>
<li><a href="#property-attributes">属性特性</a></li>
<li><a href="#dot-notation-syntax">点符号语法</a></li>
<li><a href="#literals">字面值</a></li>
<li><a href="#constants">常量</a></li>
<li><a href="#enumerated-types">枚举类型</a></li>
<li><a href="#case-statements">Case语句</a></li>
<li><a href="#private-properties">私有属性</a></li>
<li><a href="#booleans">布尔值</a></li>
<li><a href="#conditionals">条件语句</a>

<ul>
<li><a href="#ternary-operator">三元操作符</a></li>
</ul>
</li>
<li><a href="#init-methods">Init方法</a></li>
<li><a href="#class-constructor-methods">类构造方法</a></li>
<li><a href="#cgrect-functions">CGRect函数</a></li>
<li><a href="#golden-path">黄金路径</a></li>
<li><a href="#error-handling">错误处理</a></li>
<li><a href="#singletons">单例模式</a></li>
<li><a href="#line-breaks">换行符</a></li>
<li><a href="#xcode-project">Xcode工程</a></li>
</ul>


<p><b id="language"></b></p>

<h2>语言</h2>

<p>应该使用US英语.</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">UIColor</span> <span class="o">*</span><span class="n">myColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">UIColor</span> <span class="o">*</span><span class="n">myColour</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="code-organization"></b></p>

<h2>代码组织</h2>

<p>在函数分组和protocol/delegate实现中使用<code>#pragma mark -</code>来分类方法，要遵循以下一般结构：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#pragma mark - Lifecycle</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">init</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dealloc</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewWillAppear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Custom Accessors</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setCustomProperty:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">value</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">customProperty</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - IBActions/Event Response</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">submitData:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{}</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">someButtonDidPressed:</span><span class="p">(</span><span class="bp">UIButton</span><span class="o">*</span><span class="p">)</span><span class="nv">button</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Protocol conformance</span>
</span><span class='line'><span class="cp">#pragma mark - UITextFieldDelegate</span>
</span><span class='line'><span class="cp">#pragma mark - UITableViewDataSource</span>
</span><span class='line'><span class="cp">#pragma mark - UITableViewDelegate</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Public</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">publicMethod</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Private</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethod</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - NSCopying</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">copyWithZone:</span><span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span><span class="nv">zone</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - NSObject</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">description</span> <span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="spacing"></b></p>

<h2>空格</h2>

<ul>
<li>缩进使用<strong>4</strong>个空格，确保在Xcode偏好设置来设置。(raywenderlich.com使用<strong>2</strong>个空格)</li>
<li>方法大括号和其他大括号(<code>if</code>/<code>else</code>/<code>switch</code>/<code>while</code> 等.)总是在同一行语句打开但在新行中关闭。</li>
</ul>


<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="n">isHappy</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//Do something</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//Do something else</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">user</span><span class="p">.</span><span class="n">isHappy</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//Do something</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//Do something else</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在方法之间应该有且只有一行，这样有利于在视觉上更清晰和更易于组织。在方法内的空白应该分离功能，但通常都抽离出来成为一个新方法。</li>
<li>优先使用auto-synthesis。但如果有必要，<code>@synthesize</code> 和 <code>@dynamic</code>应该在实现中每个都声明新的一行。</li>
<li>应该避免以冒号对齐的方式来调用方法。因为有时方法签名可能有3个以上的冒号和冒号对齐会使代码更加易读。请<strong>不要</strong>这样做，尽管冒号对齐的方法包含代码块，因为Xcode的对齐方式令它难以辨认。</li>
</ul>


<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// blocks are easily readable</span>
</span><span class='line'><span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">1.0</span> <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">// something</span>
</span><span class='line'><span class="p">}</span> <span class="nl">completion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">finished</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// something</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// colon-aligning makes the block indentation hard to read</span>
</span><span class='line'><span class="p">[</span><span class="bp">UIView</span> <span class="nl">animateWithDuration</span><span class="p">:</span><span class="mf">1.0</span>
</span><span class='line'>                 <span class="nl">animations</span><span class="p">:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>                     <span class="c1">// something</span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>                 <span class="nl">completion</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span> <span class="n">finished</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                     <span class="c1">// something</span>
</span><span class='line'>                 <span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="comments"></b></p>

<h2>注释</h2>

<p>当需要注释时，注释应该用来解释这段特殊代码<strong>为什么</strong>要这样做。任何被使用的注释都必须保持最新或被删除。</p>

<p>一般都避免使用块注释，因为代码尽可能做到自解释，只有当断断续续或几行代码时才需要注释。<em>例外：这不应用在生成文档的注释</em></p>

<p><b id="naming"></b></p>

<h2>命名</h2>

<p>Apple命名规则尽可能坚持，特别是与这些相关的<a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html">memory management rules</a> (<a href="http://stackoverflow.com/a/2865194/340508">NARC</a>)。</p>

<p>长的，描述性的方法和变量命名是好的。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">UIButton</span> <span class="o">*</span><span class="n">settingsButton</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">UIButton</span> <span class="o">*</span><span class="n">setBut</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>三个字符前缀应该经常用在类和常量命名，但在Core Data的实体名中应被忽略。对于官方的raywenderlich.com书、初学者工具包或教程，前缀'RWT'应该被使用。</p>

<p>常量应该使用驼峰式命名规则，所有的单词首字母大写和加上与类名有关的前缀。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">static</span> <span class="n">NSTimeInterval</span> <span class="k">const</span> <span class="n">RWTTutorialViewControllerNavigationFadeAnimationDuration</span> <span class="o">=</span> <span class="mf">0.3</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">static</span> <span class="n">NSTimeInterval</span> <span class="k">const</span> <span class="n">fadetime</span> <span class="o">=</span> <span class="mf">1.7</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>属性也是使用驼峰式，但首单词的首字母小写。对属性使用auto-synthesis，而不是手动编写@ synthesize语句，除非你有一个好的理由。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">descriptiveVariableName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="kt">id</span> <span class="n">varnm</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="underscores"></b></p>

<h3>下划线</h3>

<p>当使用属性时，实例变量应该使用<code>self.</code>来访问和改变。这就意味着所有属性将会视觉效果不同，因为它们前面都有<code>self.</code>。</p>

<p>但有一个特例：在初始化方法里，实例变量(例如，_variableName)应该直接被使用来避免getters/setters潜在的副作用。</p>

<p>局部变量不应该包含下划线。</p>

<p><b id="methods"></b></p>

<h2>方法</h2>

<p>在方法签名中，应该在方法类型(-/+ 符号)之后有一个空格。在方法各个段之间应该也有一个空格(符合Apple的风格)。在参数之前应该包含一个具有描述性的关键字来描述参数。</p>

<p>&ldquo;and"这个词的用法应该保留。它不应该用于多个参数来说明，就像<code>initWithWidth:height</code>以下这个例子：</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setExampleText:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">text</span> <span class="nf">image:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">sendAction:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">aSelector</span> <span class="nf">to:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">anObject</span> <span class="nf">forAllCells:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">flag</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">viewWithTag:</span><span class="p">(</span><span class="bp">NSInteger</span><span class="p">)</span><span class="nv">tag</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithWidth:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">width</span> <span class="nf">height:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">height</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setT:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">text</span> <span class="nf">i:</span><span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">sendAction:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">aSelector</span> <span class="o">:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">anObject</span> <span class="p">:(</span><span class="kt">BOOL</span><span class="p">)</span><span class="n">flag</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">taggedView:</span><span class="p">(</span><span class="bp">NSInteger</span><span class="p">)</span><span class="nv">tag</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWithWidth:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">width</span> <span class="nf">andHeight:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">height</span><span class="p">;</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">initWith:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">width</span> <span class="nf">and:</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nv">height</span><span class="p">;</span>  <span class="c1">// Never do this.</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="variables"></b></p>

<h2>变量</h2>

<p>变量尽量以描述性的方式来命名。单个字符的变量命名应该尽量避免，除了在<code>for()</code>循环。</p>

<p>星号表示变量是指针。例如， <code>NSString *text</code> 既不是 <code>NSString* text</code> 也不是 <code>NSString * text</code>，除了一些特殊情况下常量。</p>

<p><a href="#private-properties">私有变量</a> 应该尽可能代替实例变量的使用。尽管使用实例变量是一种有效的方式，但更偏向于使用属性来保持代码一致性。</p>

<p>通过使用'back'属性(_variable，变量名前面有下划线)直接访问实例变量应该尽量避免，除了在初始化方法(<code>init</code>, <code>initWithCoder:</code>, 等…)，<code>dealloc</code> 方法和自定义的setters和getters。想了解关于如何在初始化方法和dealloc直接使用Accessor方法的更多信息，查看<a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmPractical.html#//apple_ref/doc/uid/TP40004447-SW6">这里</a></p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">RWTTutorial</span> : <span class="bp">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">RWTTutorial</span> : <span class="bp">NSObject</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="property-attributes"></b></p>

<h2>属性特性</h2>

<p>所有属性特性应该显式地列出来，有助于新手阅读代码。属性特性的顺序应该是storage、atomicity，与在Interface Builder连接UI元素时自动生成代码一致。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">weak</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIView</span> <span class="o">*</span><span class="n">containerView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">,</span> <span class="k">weak</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="bp">UIView</span> <span class="o">*</span><span class="n">containerView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>NSString应该使用<code>copy</code> 而不是 <code>strong</code>的属性特性。</p>

<p>为什么？即使你声明一个<code>NSString</code>的属性，有人可能传入一个<code>NSMutableString</code>的实例，然后在你没有注意的情况下修改它。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">copy</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">tutorialName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="dot-notation-syntax"></b></p>

<h2>点符号语法</h2>

<p>点语法是一种很方便封装访问方法调用的方式。当你使用点语法时，通过使用getter或setter方法，属性仍然被访问或修改。想了解更多，阅读<a href="https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/EncapsulatingData/EncapsulatingData.html">这里</a></p>

<p>点语法应该<strong>总是</strong>被用来访问和修改属性，因为它使代码更加简洁。[]符号更偏向于用在其他例子。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSInteger</span> <span class="n">arrayCount</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">array</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'><span class="n">view</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">orangeColor</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">delegate</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSInteger</span> <span class="n">arrayCount</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">array</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">setBackgroundColor</span><span class="p">:[</span><span class="bp">UIColor</span> <span class="n">orangeColor</span><span class="p">]];</span>
</span><span class='line'><span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">.</span><span class="n">delegate</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="literals"></b></p>

<h2>字面值</h2>

<p><code>NSString</code>, <code>NSDictionary</code>, <code>NSArray</code>, 和 <code>NSNumber</code>的字面值应该在创建这些类的不可变实例时被使用。请特别注意<code>nil</code>值不能传入<code>NSArray</code>和<code>NSDictionary</code>字面值，因为这样会导致crash。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSArray</span> <span class="o">*</span><span class="n">names</span> <span class="o">=</span> <span class="l">@[</span><span class="s">@&quot;Brian&quot;</span><span class="p">,</span> <span class="s">@&quot;Matt&quot;</span><span class="p">,</span> <span class="s">@&quot;Chris&quot;</span><span class="p">,</span> <span class="s">@&quot;Alex&quot;</span><span class="p">,</span> <span class="s">@&quot;Steve&quot;</span><span class="p">,</span> <span class="s">@&quot;Paul&quot;</span><span class="l">]</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">productManagers</span> <span class="o">=</span> <span class="l">@{</span><span class="s">@&quot;iPhone&quot;</span><span class="o">:</span> <span class="s">@&quot;Kate&quot;</span><span class="p">,</span> <span class="s">@&quot;iPad&quot;</span><span class="o">:</span> <span class="s">@&quot;Kamal&quot;</span><span class="p">,</span> <span class="s">@&quot;Mobile Web&quot;</span><span class="o">:</span> <span class="s">@&quot;Bill&quot;</span><span class="l">}</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSNumber</span> <span class="o">*</span><span class="n">shouldUseLiterals</span> <span class="o">=</span> <span class="m">@YES</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSNumber</span> <span class="o">*</span><span class="n">buildingStreetNumber</span> <span class="o">=</span> <span class="mi">@10018</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSArray</span> <span class="o">*</span><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSArray</span> <span class="nl">arrayWithObjects</span><span class="p">:</span><span class="s">@&quot;Brian&quot;</span><span class="p">,</span> <span class="s">@&quot;Matt&quot;</span><span class="p">,</span> <span class="s">@&quot;Chris&quot;</span><span class="p">,</span> <span class="s">@&quot;Alex&quot;</span><span class="p">,</span> <span class="s">@&quot;Steve&quot;</span><span class="p">,</span> <span class="s">@&quot;Paul&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">productManagers</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys</span><span class="p">:</span> <span class="s">@&quot;Kate&quot;</span><span class="p">,</span> <span class="s">@&quot;iPhone&quot;</span><span class="p">,</span> <span class="s">@&quot;Kamal&quot;</span><span class="p">,</span> <span class="s">@&quot;iPad&quot;</span><span class="p">,</span> <span class="s">@&quot;Bill&quot;</span><span class="p">,</span> <span class="s">@&quot;Mobile Web&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="bp">NSNumber</span> <span class="o">*</span><span class="n">shouldUseLiterals</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithBool</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'><span class="bp">NSNumber</span> <span class="o">*</span><span class="n">buildingStreetNumber</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSNumber</span> <span class="nl">numberWithInteger</span><span class="p">:</span><span class="mi">10018</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="constants"></b></p>

<h2>常量</h2>

<p>常量是容易重复被使用和无需通过查找和代替就能快速修改值。常量应该使用<code>static</code>来声明而不是使用<code>#define</code>，除非显式地使用宏。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">static</span> <span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">RWTAboutViewControllerCompanyName</span> <span class="o">=</span> <span class="s">@&quot;RayWenderlich.com&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="n">CGFloat</span> <span class="k">const</span> <span class="n">RWTImageThumbnailHeight</span> <span class="o">=</span> <span class="mf">50.0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#define CompanyName @&quot;RayWenderlich.com&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define thumbnailHeight 2</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="enumerated-types"></b></p>

<h2>枚举类型</h2>

<p>当使用<code>enum</code>时，推荐使用新的固定基本类型规格，因为它有更强的类型检查和代码补全。现在SDK有一个宏<code>NS_ENUM()</code>来帮助和鼓励你使用固定的基本类型。</p>

<p><strong>例如:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">typedef</span> <span class="nf">NS_ENUM</span><span class="p">(</span><span class="bp">NSInteger</span><span class="p">,</span> <span class="n">RWTLeftMenuTopItemType</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">RWTLeftMenuTopItemMain</span><span class="p">,</span>
</span><span class='line'>  <span class="n">RWTLeftMenuTopItemShows</span><span class="p">,</span>
</span><span class='line'>  <span class="n">RWTLeftMenuTopItemSchedule</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>你也可以显式地赋值(展示旧的k-style常量定义)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">typedef</span> <span class="nf">NS_ENUM</span><span class="p">(</span><span class="bp">NSInteger</span><span class="p">,</span> <span class="n">RWTGlobalConstants</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">RWTPinSizeMin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">RWTPinSizeMax</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="n">RWTPinCountMin</span> <span class="o">=</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="n">RWTPinCountMax</span> <span class="o">=</span> <span class="mi">500</span><span class="p">,</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>旧的k-style常量定义应该<strong>避免</strong>除非编写Core Foundation C的代码。</p>

<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">enum</span> <span class="n">GlobalConstants</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">kMaxPinSize</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="n">kMaxPinCount</span> <span class="o">=</span> <span class="mi">500</span><span class="p">,</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="case-statements"></b></p>

<h2>Case语句</h2>

<p>大括号在case语句中并不是必须的，除非编译器强制要求。当一个case语句包含多行代码时，大括号应该加上。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="c1">// Multi-line example using braces</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="k">default</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>有很多次，当相同代码被多个cases使用时，一个fall-through应该被使用。一个fall-through就是在case最后移除'break'语句，这样就能够允许执行流程跳转到下一个case值。为了代码更加清晰，一个fall-through需要注释一下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// ** fall-through! **</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// code executed for values 1 and 2</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="k">default</span><span class="o">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当在switch使用枚举类型时，'default'是不需要的。例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">RWTLeftMenuTopItemType</span> <span class="n">menuType</span> <span class="o">=</span> <span class="n">RWTLeftMenuTopItemMain</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="n">menuType</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="nl">RWTLeftMenuTopItemMain</span><span class="p">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="k">case</span> <span class="nl">RWTLeftMenuTopItemShows</span><span class="p">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="k">case</span> <span class="nl">RWTLeftMenuTopItemSchedule</span><span class="p">:</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>    <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="private-properties"></b></p>

<h2>私有属性</h2>

<p>私有属性应该在类的实现文件中的类扩展(匿名分类)中声明，命名分类(比如<code>RWTPrivate</code>或<code>private</code>)应该从不使用除非是扩展其他类。匿名分类应该通过使用<headerfile>+Private.h文件的命名规则暴露给测试。</p>

<p><strong>例如:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">RWTDetailViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="n">GADBannerView</span> <span class="o">*</span><span class="n">googleAdView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">ADBannerView</span> <span class="o">*</span><span class="n">iAdView</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">strong</span><span class="p">,</span> <span class="k">nonatomic</span><span class="p">)</span> <span class="bp">UIWebView</span> <span class="o">*</span><span class="n">adXWebView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="booleans"></b></p>

<h2>布尔值</h2>

<p>Objective-C使用<code>YES</code>和<code>NO</code>。因为<code>true</code>和<code>false</code>应该只在CoreFoundation，C或C++代码使用。既然<code>nil</code>解析成<code>NO</code>，所以没有必要在条件语句比较。不要拿某样东西直接与<code>YES</code>比较，因为<code>YES</code>被定义为1和一个<code>BOOL</code>能被设置为8位。</p>

<p>这是为了在不同文件保持一致性和在视觉上更加简洁而考虑。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">someObject</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">anotherObject</span> <span class="n">boolValue</span><span class="p">])</span> <span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">someObject</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">anotherObject</span> <span class="n">boolValue</span><span class="p">]</span> <span class="o">==</span> <span class="nb">NO</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">isAwesome</span> <span class="o">==</span> <span class="nb">YES</span><span class="p">)</span> <span class="p">{}</span> <span class="c1">// Never do this.</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">isAwesome</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span> <span class="p">{}</span> <span class="c1">// Never do this.</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果<code>BOOL</code>属性的名字是一个形容词，属性就能忽略"is"前缀，但要指定get访问器的惯用名称。例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="k">assign</span><span class="p">,</span> <span class="k">getter</span><span class="o">=</span><span class="n">isEditable</span><span class="p">)</span> <span class="kt">BOOL</span> <span class="n">editable</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>文字和例子从这里引用<a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CodingGuidelines/Articles/NamingIvarsAndTypes.html#//apple_ref/doc/uid/20001284-BAJGIIJE">Cocoa Naming Guidelines</a></p>

<p><b id="conditionals"></b></p>

<h2>条件语句</h2>

<p>条件语句主体为了防止出错应该使用大括号包围，即使条件语句主体能够不用大括号编写(如，只用一行代码)。这些错误包括添加第二行代码和期望它成为if语句；还有，<a href="http://programmers.stackexchange.com/a/16530">even more dangerous defect</a>可能发生在if语句里面一行代码被注释了，然后下一行代码不知不觉地成为if语句的一部分。除此之外，这种风格与其他条件语句的风格保持一致，所以更加容易阅读。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">success</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">success</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>或</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">error</span><span class="p">)</span> <span class="k">return</span> <span class="n">success</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="ternary-operator"></b></p>

<h3>三元操作符</h3>

<p>当需要提高代码的清晰性和简洁性时，三元操作符<code>?:</code>才会使用。单个条件求值常常需要它。多个条件求值时，如果使用<code>if</code>语句或重构成实例变量时，代码会更加易读。一般来说，最好使用三元操作符是在根据条件来赋值的情况下。</p>

<p>Non-boolean的变量与某东西比较，加上括号()会提高可读性。如果被比较的变量是boolean类型，那么就不需要括号。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSInteger</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="n">value</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="nl">x</span> <span class="p">:</span> <span class="n">y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">isHorizontal</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">isHorizontal</span> <span class="o">?</span> <span class="nl">x</span> <span class="p">:</span> <span class="n">y</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span> <span class="o">?</span> <span class="n">x</span> <span class="o">=</span> <span class="n">c</span> <span class="o">&gt;</span> <span class="n">d</span> <span class="o">?</span> <span class="nl">c</span> <span class="p">:</span> <span class="nl">d</span> <span class="p">:</span> <span class="n">y</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="init-methods"></b></p>

<h2>Init方法</h2>

<p>Init方法应该遵循Apple生成代码模板的命名规则。返回类型应该使用<code>instancetype</code>而不是<code>id</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">init</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">self</span> <span class="o">=</span> <span class="p">[</span><span class="nb">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>查看关于instancetype的文章<a href="#class-constructor-methods">Class Constructor Methods</a></p>

<p><b id="class-constructor-methods"></b></p>

<h2>类构造方法</h2>

<p>当类构造方法被使用时，它应该返回类型是<code>instancetype</code>而不是<code>id</code>。这样确保编译器正确地推断结果类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">Airplane</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">airplaneWithType:</span><span class="p">(</span><span class="n">RWTAirplaneType</span><span class="p">)</span><span class="nv">type</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>关于更多instancetype信息，请查看<a href="http://nshipster.com/instancetype/">NSHipster.com</a></p>

<p><b id="cgrect-functions"></b></p>

<h2>CGRect函数</h2>

<p>当访问<code>CGRect</code>里的<code>x</code>, <code>y</code>, <code>width</code>, 或 <code>height</code>时，应该使用<a href="http://developer.apple.com/library/ios/#documentation/graphicsimaging/reference/CGGeometry/Reference/reference.html"><code>CGGeometry</code>函数</a>而不是直接通过结构体来访问。引用Apple的<code>CGGeometry</code>:</p>

<blockquote><p>在这个参考文档中所有的函数，接受CGRect结构体作为输入，在计算它们结果时隐式地标准化这些rectangles。因此，你的应用程序应该避免直接访问和修改保存在CGRect数据结构中的数据。相反，使用这些函数来操纵rectangles和获取它们的特性。</p></blockquote>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">x</span> <span class="o">=</span> <span class="n">CGRectGetMinX</span><span class="p">(</span><span class="n">frame</span><span class="p">);</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">y</span> <span class="o">=</span> <span class="n">CGRectGetMinY</span><span class="p">(</span><span class="n">frame</span><span class="p">);</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">CGRectGetWidth</span><span class="p">(</span><span class="n">frame</span><span class="p">);</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">CGRectGetHeight</span><span class="p">(</span><span class="n">frame</span><span class="p">);</span>
</span><span class='line'><span class="bp">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">x</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">y</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'><span class="bp">CGRect</span> <span class="n">frame</span> <span class="o">=</span> <span class="p">(</span><span class="bp">CGRect</span><span class="p">){</span> <span class="p">.</span><span class="n">origin</span> <span class="o">=</span> <span class="n">CGPointZero</span><span class="p">,</span> <span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="golden-path"></b></p>

<h2>黄金路径</h2>

<p>当使用条件语句编码时，左手边的代码应该是"golden" 或 &ldquo;happy"路径。也就是不要嵌套<code>if</code>语句，多个返回语句也是OK。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">someMethod</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">someOther</span> <span class="n">boolValue</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//Do something important</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">someMethod</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">someOther</span> <span class="n">boolValue</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//Do something important</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="error-handling"></b></p>

<h2>错误处理</h2>

<p>当方法通过引用来返回一个错误参数，判断返回值而不是错误变量。</p>

<p><strong>应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="nb">self</span> <span class="nl">trySomethingWithError</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Handle Error</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>不应该:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span> <span class="nl">trySomethingWithError</span><span class="p">:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Handle Error</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在成功的情况下，有些Apple的APIs记录垃圾值(garbage values)到错误参数(如果non-NULL)，那么判断错误值会导致false负值和crash。</p>

<p><b id="singletons"></b></p>

<h2>单例模式</h2>

<p>单例对象应该使用线程安全模式来创建共享实例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">instancetype</span><span class="p">)</span><span class="nf">sharedInstance</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="kt">id</span> <span class="n">sharedInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">static</span> <span class="kt">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">sharedInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="nb">self</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">sharedInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这会防止<a href="http://cocoasamurai.blogspot.com/2011/04/singletons-your-doing-them-wrong.html">possible and sometimes prolific crashes</a>.</p>

<p><b id="line-breaks"></b></p>

<h2>换行符</h2>

<p>换行符是一个很重要的主题，因为它的风格指南主要为了打印和网上的可读性。</p>

<p>例如:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">productsRequest</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">SKProductsRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithProductIdentifiers</span><span class="p">:</span><span class="n">productIdentifiers</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>一行很长的代码应该分成两行代码，下一行用两个空格隔开。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">productsRequest</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">SKProductsRequest</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>  <span class="nl">initWithProductIdentifiers</span><span class="p">:</span><span class="n">productIdentifiers</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><b id="xcode-project"></b></p>

<h2>Xcode工程</h2>

<p>物理文件应该与Xcode工程文件保持同步来避免文件扩张。任何Xcode分组的创建应该在文件系统的文件体现。代码不仅是根据<strong>类型</strong>来分组，而且还可以根据<strong>功能</strong>来分组，这样代码更加清晰。</p>

<p>尽可能在target的Build Settings打开"Treat Warnings as Errors，和启用以下<a href="http://boredzo.org/blog/archives/2009-11-07/warnings">additional warnings</a>。如果你需要忽略特殊的警告，使用 <a href="http://clang.llvm.org/docs/UsersManual.html#controlling-diagnostics-via-pragmas">Clang&rsquo;s pragma feature</a>。</p>

<h1>其他Objective-C编码规范</h1>

<p>如果我们的编码规范不符合你的口味，可以查看其他的编码规范：</p>

<ul>
<li><a href="https://github.com/RobotsAndPencils/objective-c-style-guide">Robots &amp; Pencils</a></li>
<li><a href="https://github.com/NYTimes/objective-c-style-guide">New York Times</a></li>
<li><a href="http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml">Google</a></li>
<li><a href="https://github.com/github/objective-c-conventions">GitHub</a></li>
<li><a href="https://trac.adium.im/wiki/CodingStyle">Adium</a></li>
<li><a href="https://gist.github.com/soffes/812796">Sam Soffes</a></li>
<li><a href="http://cocoadevcentral.com/articles/000082.php">CocoaDevCentral</a></li>
<li><a href="http://lukeredpath.co.uk/blog/my-objective-c-style-guide.html">Luke Redpath</a></li>
<li><a href="http://www.cimgf.com/zds-code-style-guide/">Marcus Zarra</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala基础语法]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/13/scalaji-chu-yu-fa/"/>
    <updated>2015-11-13T23:03:58+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/13/scalaji-chu-yu-fa</id>
    <content type="html"><![CDATA[<!--more-->


<h2>表达式和值</h2>

<h3>启动解释器</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">$</span> <span class="n">scala</span>
</span><span class='line'><span class="nc">Welcome</span> <span class="n">to</span> <span class="nc">Scala</span> <span class="n">version</span> <span class="mf">2.11</span><span class="o">.</span><span class="mi">6</span> <span class="o">(</span><span class="nc">Java</span> <span class="nc">HotSpot</span><span class="o">(</span><span class="nc">TM</span><span class="o">)</span> <span class="mi">64</span><span class="o">-</span><span class="nc">Bit</span> <span class="nc">Server</span> <span class="nc">VM</span><span class="o">,</span> <span class="nc">Java</span> <span class="mf">1.8</span><span class="o">.</span><span class="mi">0</span><span class="n">_25</span><span class="o">).</span>
</span><span class='line'><span class="nc">Type</span> <span class="n">in</span> <span class="n">expressions</span> <span class="n">to</span> <span class="n">have</span> <span class="n">them</span> <span class="n">evaluated</span><span class="o">.</span>
</span><span class='line'><span class="nc">Type</span> <span class="k">:</span><span class="kt">help</span> <span class="kt">for</span> <span class="kt">more</span> <span class="kt">information.</span>
</span><span class='line'>
</span><span class='line'><span class="kt">scala&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>表达式</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">res0</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<h3>值(常量)</h3>

<p>你可以给一个表达式的结果起个名字赋成一个不变量<code>（val）</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">two</span> <span class="k">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">two</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">two</span> <span class="k">=</span> <span class="mi">2</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">console</span><span class="k">&gt;:</span><span class="mi">8</span><span class="k">:</span> <span class="kt">error:</span> <span class="kt">reassignment</span> <span class="kt">to</span> <span class="kt">val</span>
</span><span class='line'>       <span class="n">two</span> <span class="k">=</span> <span class="mi">2</span>
</span><span class='line'>           <span class="o">^</span>
</span></code></pre></td></tr></table></div></figure>


<h3>变量</h3>

<p>如果你需要修改这个名称和结果的绑定，可以选择使用<code>var</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">var</span> <span class="n">name</span> <span class="k">=</span> <span class="s">&quot;steve&quot;</span>
</span><span class='line'><span class="n">name</span><span class="k">:</span> <span class="kt">java.lang.String</span> <span class="o">=</span> <span class="n">steve</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">name</span> <span class="k">=</span> <span class="s">&quot;marius&quot;</span>
</span><span class='line'><span class="n">name</span><span class="k">:</span> <span class="kt">java.lang.String</span> <span class="o">=</span> <span class="n">marius</span>
</span></code></pre></td></tr></table></div></figure>


<h3>函数(<code>function</code>)</h3>

<p>你可以使用def创建函数.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">def</span> <span class="n">addOne</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="n">m</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">addOne</span><span class="k">:</span> <span class="o">(</span><span class="kt">m:</span> <span class="kt">Int</span><span class="o">)</span><span class="kt">Int</span>
</span><span class='line'><span class="k">#</span> <span class="n">其中m为参数</span><span class="o">,</span><span class="n">冒号后为参数类型</span><span class="err">，</span><span class="n">括号为Int为返回值类型</span><span class="err">。</span><span class="n">可以不写</span><span class="err">，</span><span class="n">编译器自动识别</span><span class="err">。</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果函数不带参数，你可以不写括号</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">def</span> <span class="n">three</span><span class="o">()</span> <span class="k">=</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span>
</span><span class='line'><span class="n">three</span><span class="k">:</span> <span class="o">()</span><span class="kt">Int</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">three</span><span class="o">()</span>
</span><span class='line'><span class="n">res2</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">three</span>
</span><span class='line'><span class="n">res3</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>匿名函数</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="o">(</span><span class="n">x</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">res2</span><span class="k">:</span> <span class="o">(</span><span class="kt">Int</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个函数为参数为<code>x</code>的<code>Int</code>变量加1。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">res2</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span>
</span><span class='line'><span class="n">res3</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<p>你可以传递匿名函数，或将其保存成不变量。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">addOne</span> <span class="k">=</span> <span class="o">(</span><span class="n">x</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">addOne</span><span class="k">:</span> <span class="o">(</span><span class="kt">Int</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">addOne</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span>
</span><span class='line'><span class="n">res4</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你的函数有很多表达式，可以使用<code>{}</code>来格式化代码，使之易读</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">timesTwo</span><span class="o">(</span><span class="n">i</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;hello world&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span>   <span class="c1">//返回值为Int</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>对匿名函数也是这样的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="o">{</span> <span class="n">i</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=&gt;</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;hello world&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">res0</span><span class="k">:</span> <span class="o">(</span><span class="kt">Int</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">等价于</span> <span class="o">(</span><span class="n">i</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="o">=&gt;{</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;hello world&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>函数是一等公民</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="c1">//函数值</span>
</span><span class='line'><span class="k">val</span> <span class="n">squareVal</span> <span class="k">=</span> <span class="o">(</span><span class="n">a</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">a</span> <span class="o">*</span> <span class="n">a</span>
</span><span class='line'><span class="c1">//函数作为参数传递</span>
</span><span class='line'><span class="k">def</span> <span class="n">addOne</span><span class="o">(</span><span class="n">f</span><span class="k">:</span><span class="kt">Int</span> <span class="o">=&gt;</span> <span class="nc">Int</span><span class="o">,</span> <span class="n">arg</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="n">f</span><span class="o">(</span><span class="n">arg</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="s">&quot;addOne(squareVal,2):&quot;</span> <span class="o">+</span> <span class="n">addOne</span><span class="o">(</span><span class="n">squareVal</span><span class="o">,</span> <span class="mi">2</span><span class="o">))</span> <span class="c1">// 结果为6</span>
</span></code></pre></td></tr></table></div></figure>


<h3>按名称传递参数</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">logEnable</span> <span class="k">=</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="nc">MSG</span> <span class="k">=</span> <span class="s">&quot;programing is running&quot;</span>
</span><span class='line'><span class="k">def</span> <span class="n">log</span><span class="o">(</span><span class="n">msg</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">=</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">logEnable</span><span class="o">)</span> <span class="n">println</span><span class="o">(</span><span class="n">msg</span><span class="o">)</span>
</span><span class='line'>    <span class="k">else</span> <span class="n">println</span><span class="o">(</span><span class="s">&quot;programing is exit&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">log</span><span class="o">(</span><span class="nc">MSG</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">0</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为程序中出现了<code>1 / 0</code>，所以程序运行的话会出现异常, 但是修改为按名称传递后将不会产生异常。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">log</span><span class="o">(</span><span class="n">msg</span><span class="k">:</span> <span class="o">=&gt;</span> <span class="nc">String</span><span class="o">)</span> <span class="k">=</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">logEnable</span><span class="o">)</span> <span class="n">println</span><span class="o">(</span><span class="n">msg</span><span class="o">)</span>
</span><span class='line'>    <span class="k">else</span> <span class="n">println</span><span class="o">(</span><span class="s">&quot;programing is exit&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为log函数的参数是按名称传递，参数会等到实际使用的时候才会计算，所以被跳过。
按名称传递参数可以减少不必要的计算和异常。</p>

<h3>部分应用<code>(Partial application)</code></h3>

<p>你可以使用下划线<code>“_”</code>部分应用一个函数，结果将得到另一个函数。<code>Scala</code>使用下划线表示不同上下文中的不同事物，你通常可以把它看作是一个没有命名的神奇通配符。在<code>{ _ + 2 }</code>的上下文中，它代表一个匿名参数。你可以这样使用它：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">def</span> <span class="n">adder</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">,</span> <span class="n">n</span><span class="k">:</span> <span class="kt">Int</span><span class="o">,</span> <span class="n">i</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="n">m</span> <span class="o">+</span> <span class="n">n</span> <span class="o">+</span> <span class="n">i</span>
</span><span class='line'><span class="n">adder</span><span class="k">:</span> <span class="o">(</span><span class="kt">m:</span> <span class="kt">Int</span><span class="o">,</span> <span class="kt">n:</span> <span class="kt">Int</span><span class="o">,</span> <span class="n">i</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="nc">Int</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">add2</span> <span class="k">=</span> <span class="n">adder</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span> <span class="k">_:</span> <span class="kt">Int</span><span class="o">,</span> <span class="mi">10</span><span class="o">)</span>
</span><span class='line'><span class="n">add2</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">add2</span><span class="o">(</span><span class="mi">7</span><span class="o">)</span>
</span><span class='line'><span class="n">res25</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">22</span>
</span></code></pre></td></tr></table></div></figure>


<h3>鸭子类型</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="o">{</span> <span class="k">def</span> <span class="n">close</span><span class="o">()</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>作为参数类型。因此任何含有<code>close()</code>的函数的类都可以作为参数。
不必使用继承这种不够灵活的特性。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">withClose</span><span class="o">(</span><span class="n">closeAble</span><span class="k">:</span> <span class="o">{</span> <span class="kt">def</span> <span class="kt">close</span><span class="o">()</span><span class="kt">:</span> <span class="kt">Unit</span> <span class="o">},</span>  <span class="n">op</span><span class="k">:</span> <span class="o">{</span> <span class="kt">def</span> <span class="kt">close</span><span class="o">()</span><span class="kt">:</span> <span class="kt">Unit</span> <span class="o">}</span> <span class="o">=&gt;</span> <span class="nc">Unit</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">op</span><span class="o">(</span><span class="n">closeAble</span><span class="o">)</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">closeAble</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Connection</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">def</span> <span class="n">close</span><span class="o">()</span> <span class="k">=</span> <span class="n">println</span><span class="o">(</span><span class="s">&quot;close Connection&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">conn</span><span class="k">:</span> <span class="kt">Connection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Connection</span><span class="o">()</span>
</span><span class='line'><span class="n">withClose</span><span class="o">(</span><span class="n">conn</span><span class="o">,</span> <span class="n">conn</span> <span class="k">=&gt;</span> <span class="n">println</span><span class="o">(</span><span class="s">&quot;do something with Connection&quot;</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>柯里化函数</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">add</span><span class="o">(</span><span class="n">x</span><span class="k">:</span><span class="kt">Int</span><span class="o">,</span> <span class="n">y</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</span></code></pre></td></tr></table></div></figure>


<p>是普通的函数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">add</span><span class="o">(</span><span class="n">x</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="o">(</span><span class="n">y</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</span></code></pre></td></tr></table></div></figure>


<p>是柯里化后的函数，相当于返回一个匿名函数表达式。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">add</span><span class="o">(</span><span class="n">x</span><span class="k">:</span><span class="kt">Int</span><span class="o">)(</span><span class="n">y</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</span></code></pre></td></tr></table></div></figure>


<p>有时会有这样的需求：允许别人一会在你的函数上应用一些参数，然后又应用另外的一些参数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">def</span> <span class="n">multiply</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)(</span><span class="n">n</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="n">m</span> <span class="o">*</span> <span class="n">n</span>
</span><span class='line'><span class="n">multiply</span><span class="k">:</span> <span class="o">(</span><span class="kt">m:</span> <span class="kt">Int</span><span class="o">)(</span><span class="kt">n:</span> <span class="kt">Int</span><span class="o">)</span><span class="kt">Int</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 你可以直接传入两个参数。</span>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">multiply</span><span class="o">(</span><span class="mi">2</span><span class="o">)(</span><span class="mi">3</span><span class="o">)</span>
</span><span class='line'><span class="n">res0</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 你可以填上第一个参数并且部分应用第二个参数。加 _ 作为部分应用函数</span>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">timesTwo</span> <span class="k">=</span> <span class="n">multiply</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span> <span class="k">_</span>
</span><span class='line'><span class="n">timesTwo</span><span class="k">:</span> <span class="o">(</span><span class="kt">Int</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">timesTwo</span><span class="o">(</span><span class="mi">3</span><span class="o">)</span>
</span><span class='line'><span class="n">res1</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">6</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">def</span> <span class="n">multiply</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="o">(</span><span class="n">n</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">m</span> <span class="o">*</span> <span class="n">n</span>
</span><span class='line'><span class="n">multiply</span><span class="k">:</span> <span class="o">(</span><span class="kt">m:</span> <span class="kt">Int</span><span class="o">)</span><span class="kt">Int</span> <span class="o">=&gt;</span> <span class="nc">Int</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">timesTwo</span> <span class="k">=</span> <span class="n">multiply</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span><span class='line'><span class="n">timesTwo</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=&gt;</span> <span class="nc">Int</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">timesTwo</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span>
</span><span class='line'><span class="n">res36</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<h3>可变长度参数</h3>

<p><code>Scala</code>在定义函数时允许指定最后一个参数可以重复（变长参数），从而允许函数调用者使用变长参数列表来调用该函数，<code>Scala</code>中使用<code>“*”</code>来指明该参数为重复参数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">def</span> <span class="n">printf</span><span class="o">(</span><span class="n">text</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span> <span class="n">xs</span><span class="k">:</span> <span class="kt">Any*</span><span class="o">)</span> <span class="k">=</span> <span class="nc">Console</span><span class="o">.</span><span class="n">print</span><span class="o">(</span><span class="n">text</span><span class="o">.</span><span class="n">format</span><span class="o">(</span><span class="n">xs</span><span class="k">:</span> <span class="k">_</span><span class="kt">*</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>例如要在多个字符串上执行String的capitalize函数，可以这样写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">def</span> <span class="n">capitalizeAll</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">String*</span><span class="o">)</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">args</span><span class="o">.</span><span class="n">map</span> <span class="o">{</span> <span class="n">arg</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="n">arg</span><span class="o">.</span><span class="n">capitalize</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">capitalizeAll</span><span class="o">(</span><span class="s">&quot;rarity&quot;</span><span class="o">,</span> <span class="s">&quot;applejack&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">res2</span><span class="k">:</span> <span class="kt">Seq</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span> <span class="k">=</span> <span class="nc">ArrayBuffer</span><span class="o">(</span><span class="nc">Rarity</span><span class="o">,</span> <span class="nc">Applejack</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">def</span> <span class="n">printA</span> <span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">String</span> <span class="kt">*</span><span class="o">)</span> <span class="k">=</span>
</span><span class='line'>    <span class="k">for</span> <span class="o">(</span><span class="n">arg</span> <span class="k">&lt;-</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'>        <span class="n">println</span><span class="o">(</span><span class="n">arg</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">printA</span> <span class="o">(</span><span class="s">&quot;1&quot;</span><span class="o">,</span> <span class="s">&quot;2&quot;</span><span class="o">,</span> <span class="s">&quot;3&quot;</span><span class="o">)</span>
</span><span class='line'><span class="mi">1</span>
</span><span class='line'><span class="mi">2</span>
</span><span class='line'><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<p>在函数内部，变长参数的类型，实际为一数组，比如上例的<code>String *</code> 类型实际为 <code>Array[String]</code>。 然而，如今你试图直接传入一个数组类型的参数给这个参数，编译器会报错：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">var</span> <span class="n">arr</span> <span class="k">=</span> <span class="nc">Array</span><span class="o">(</span><span class="s">&quot;hello&quot;</span><span class="o">,</span> <span class="s">&quot;world&quot;</span><span class="o">,</span> <span class="s">&quot;goodbye&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">arr</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span> <span class="k">=</span> <span class="nc">Array</span><span class="o">(</span><span class="n">hello</span><span class="o">,</span> <span class="n">world</span><span class="o">,</span> <span class="n">goodbye</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">printA</span><span class="o">(</span><span class="n">arr</span><span class="o">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">console</span><span class="k">&gt;:</span><span class="mi">10</span><span class="k">:</span> <span class="kt">error:</span> <span class="k">type</span> <span class="kt">mismatch</span><span class="o">;</span>
</span><span class='line'> <span class="n">found</span>   <span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span>
</span><span class='line'> <span class="n">required</span><span class="k">:</span> <span class="kt">String</span>
</span><span class='line'>              <span class="n">printA</span><span class="o">(</span><span class="n">arr</span><span class="o">)</span>
</span><span class='line'>                     <span class="o">^</span>
</span></code></pre></td></tr></table></div></figure>


<p>为了避免这种情况，你可以通过在变量后面添加 <code>_*</code>来解决，这个符号告诉<code>Scala</code>编译器在传递参数时逐个传入数组的每个元素，而不是数组整体。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">printA</span><span class="o">(</span><span class="n">arr</span><span class="k">:</span> <span class="k">_</span><span class="kt">*</span><span class="o">)</span>
</span><span class='line'><span class="n">hello</span>
</span><span class='line'><span class="n">world</span>
</span><span class='line'><span class="n">goodbye</span>
</span></code></pre></td></tr></table></div></figure>


<h3>类</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">class</span> <span class="nc">Person</span><span class="o">(</span><span class="k">val</span> <span class="n">firstName</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span> <span class="k">val</span> <span class="n">lastName</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">var</span> <span class="nc">_age</span> <span class="k">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">age</span> <span class="k">=</span> <span class="nc">_age</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">age_=</span><span class="o">(</span><span class="n">newAge</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">=</span> <span class="nc">_age</span> <span class="k">=</span> <span class="n">newAge</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">fullName</span><span class="o">()</span> <span class="k">=</span> <span class="n">firstName</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">lastName</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">override</span> <span class="k">def</span> <span class="n">toString</span><span class="o">()</span> <span class="k">=</span> <span class="n">fullName</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>构造函数</h4>

<p>构造函数不是特殊的方法，他们是除了类的方法定义之外的代码。让我们扩展计算器的例子，增加一个构造函数参数，并用它来初始化内部状态。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">class</span> <span class="nc">Calculator</span><span class="o">(</span><span class="n">brand</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * A constructor.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">color</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="k">if</span> <span class="o">(</span><span class="n">brand</span> <span class="o">==</span> <span class="s">&quot;TI&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="s">&quot;blue&quot;</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">brand</span> <span class="o">==</span> <span class="s">&quot;HP&quot;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="s">&quot;black&quot;</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="s">&quot;white&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// An instance method.</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">add</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">,</span> <span class="n">n</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="k">:</span> <span class="kt">Int</span> <span class="o">=</span> <span class="n">m</span> <span class="o">+</span> <span class="n">n</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>你可以使用构造函数来构造一个实例：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">calc</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Calculator</span><span class="o">(</span><span class="s">&quot;HP&quot;</span><span class="o">)</span>
</span><span class='line'><span class="n">calc</span><span class="k">:</span> <span class="kt">Calculator</span> <span class="o">=</span> <span class="nc">Calculator</span><span class="k">@</span><span class="mi">1</span><span class="n">e64cc4d</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">calc</span><span class="o">.</span><span class="n">color</span>
</span><span class='line'><span class="n">res0</span><span class="k">:</span> <span class="kt">String</span> <span class="o">=</span> <span class="n">black</span>
</span></code></pre></td></tr></table></div></figure>


<h3>函数与方法</h3>

<p>函数和方法在很大程度上是可以互换的。由于函数和方法是如此的相似，你可能都不知道你调用的东西是一个函数还是一个方法。而当真正碰到的方法和函数之间的差异的时候，你可能会感到困惑。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">class</span> <span class="nc">C</span> <span class="o">{</span>
</span><span class='line'>     <span class="o">|</span>   <span class="k">var</span> <span class="n">acc</span> <span class="k">=</span> <span class="mi">0</span>
</span><span class='line'>     <span class="o">|</span>   <span class="k">def</span> <span class="n">minc</span> <span class="k">=</span> <span class="o">{</span> <span class="n">acc</span> <span class="o">+=</span> <span class="mi">1</span> <span class="o">}</span>  <span class="c1">//定义方法</span>
</span><span class='line'>     <span class="o">|</span>   <span class="k">val</span> <span class="n">finc</span> <span class="k">=</span> <span class="o">{</span> <span class="o">()</span> <span class="k">=&gt;</span> <span class="n">acc</span> <span class="o">+=</span> <span class="mi">1</span> <span class="o">}</span>    <span class="c1">// 定义函数</span>
</span><span class='line'>     <span class="o">|</span> <span class="o">}</span>
</span><span class='line'><span class="n">defined</span> <span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="k">val</span> <span class="n">c</span> <span class="k">=</span> <span class="k">new</span> <span class="n">C</span>
</span><span class='line'><span class="n">c</span><span class="k">:</span> <span class="kt">C</span> <span class="o">=</span> <span class="n">C</span><span class="k">@</span><span class="mi">1</span><span class="n">af1bd6</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">minc</span> <span class="c1">// calls c.minc()</span>
</span><span class='line'>
</span><span class='line'><span class="n">scala</span><span class="o">&gt;</span> <span class="n">c</span><span class="o">.</span><span class="n">finc</span> <span class="c1">// returns the function as a value:</span>
</span><span class='line'><span class="n">res2</span><span class="k">:</span> <span class="o">()</span> <span class="o">=&gt;</span> <span class="nc">Unit</span> <span class="k">=</span> <span class="o">&lt;</span><span class="n">function0</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>继承</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">class</span> <span class="nc">ScientificCalculator</span><span class="o">(</span><span class="n">brand</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Calculator</span><span class="o">(</span><span class="n">brand</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">log</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Double</span><span class="o">,</span> <span class="n">base</span><span class="k">:</span> <span class="kt">Double</span><span class="o">)</span> <span class="k">=</span> <span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="o">(</span><span class="n">m</span><span class="o">)</span> <span class="o">/</span> <span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="o">(</span><span class="n">base</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>重载</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">class</span> <span class="nc">EvenMoreScientificCalculator</span><span class="o">(</span><span class="n">brand</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">ScientificCalculator</span><span class="o">(</span><span class="n">brand</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">log</span><span class="o">(</span><span class="n">m</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span><span class="k">:</span> <span class="kt">Double</span> <span class="o">=</span> <span class="n">log</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="n">math</span><span class="o">.</span><span class="n">exp</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>特质<code>(Trait)</code></h3>

<p>特质是一些字段和行为的集合，Traits就像是有函数体的Interface,可以扩展或混入（mixin）你的类中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">trait</span> <span class="nc">Car</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">brand</span><span class="k">:</span> <span class="kt">String</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">trait</span> <span class="nc">Shiny</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">shineRefraction</span><span class="k">:</span> <span class="kt">Int</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BMW</span> <span class="k">extends</span> <span class="nc">Car</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">brand</span> <span class="k">=</span> <span class="s">&quot;BMW&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过<code>with</code>关键字，一个类可以扩展多个特质</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">class</span> <span class="nc">BMW</span> <span class="k">extends</span> <span class="nc">Car</span> <span class="k">with</span> <span class="nc">Shiny</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">brand</span> <span class="k">=</span> <span class="s">&quot;BMW&quot;</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">shineRefraction</span> <span class="k">=</span> <span class="mi">12</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>泛型</h3>

<p>对函数参数是泛型的，来适用于所有类型。使用<code>[]</code>引入泛型，在使用确定泛型的参数类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">trait</span> <span class="nc">Cache</span><span class="o">[</span><span class="kt">K</span>, <span class="kt">V</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">get</span><span class="o">(</span><span class="n">key</span><span class="k">:</span> <span class="kt">K</span><span class="o">)</span><span class="k">:</span> <span class="kt">V</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">put</span><span class="o">(</span><span class="n">key</span><span class="k">:</span> <span class="kt">K</span><span class="o">,</span> <span class="n">value</span><span class="k">:</span> <span class="kt">V</span><span class="o">)</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">delete</span><span class="o">(</span><span class="n">key</span><span class="k">:</span> <span class="kt">K</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>方法也可以引入类型参数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Scala'><span class='line'><span class="k">def</span> <span class="n">remove</span><span class="o">[</span><span class="kt">K</span><span class="o">](</span><span class="n">key</span><span class="k">:</span> <span class="kt">K</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>参考</h3>

<p><a href="http://twitter.github.io/scala_school/zh_cn/basics.html">Scala 课堂</a>
<a href="http://zh.scala-tour.com/#/hello-wolrd">Scala 指南</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux上Hadoop安装配置]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/11/linuxshang-hadoopan-zhuang-pei-zhi/"/>
    <updated>2015-11-11T22:56:40+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/11/linuxshang-hadoopan-zhuang-pei-zhi</id>
    <content type="html"><![CDATA[<!--more-->


<p>准备工作
安装<code>java</code>, 设置java环境</p>

<h2>下载<code>Hadoop</code></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget http://mirror.bit.edu.cn/apache/hadoop/common/hadoop-2.6.2/hadoop-2.6.2.tar.gz
</span><span class='line'>tar -zxvf  hadoop-2.6.2.tar.gz
</span><span class='line'><span class="nb">cd </span>hadoop-2.6.2
</span></code></pre></td></tr></table></div></figure>


<h2>修改<code>etc/hadoop/hadoop-env.sh</code></h2>

<p>将<code>export JAVA_HOME=${JAVA_HOME}</code>修改为系统中对应的<code>Java</code>环境<code>export JAVA_HOME=/root/jdk1.7.0_79</code></p>

<h2>伪分布式模式安装</h2>

<p>Hadoop可以在单节点上以伪分布式模式运行，是以不同的Java进程模拟分布式运行中的各类节点(NameNode、DataNode、)。</p>

<h3>配置<code>Hadoop</code></h3>

<p>修改以下文件
<code>core-site.xml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>fs.default.name<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>hdfs://iZ28jq7frf7Z:9000<span class="nt">&lt;/value&gt;</span> <span class="c">&lt;!--value中为hostname--&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>   <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;value&gt;</span>/root/hadoop/hadooptmpdir<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>dfs.name.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;value&gt;</span>/root/hadoop/dfsnamedir<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>hdfs-site.xml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>dfs.replication<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;value&gt;</span>1<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>生成<code>mapred-site.xml</code>配置文件。<code>cp mapred-site.xml.template mapred-site.xml</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Put site-specific property overrides in this file. --&gt;</span>
</span><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>mapred.job.tracker<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;value&gt;</span>iZ28jq7frf7Z:9001<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>设置免密码<code>SSH</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh-keygen -t rsa
</span><span class='line'>cp id_rsa.pub authorized_keys
</span></code></pre></td></tr></table></div></figure>


<h3>启动<code>Hadoop</code></h3>

<p>格式化分布式文件系统</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/hadoop namenode -format
</span></code></pre></td></tr></table></div></figure>


<p>启动<code>Hadoop</code>守护进程</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sbin/start-all.sh
</span><span class='line'>或者
</span><span class='line'>start-dfs.sh
</span><span class='line'>start-yarn.sh
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AFNetWorking发送JSON数据到服务器]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/11/afnetworkingfa-song-jsonshu-ju-dao-fu-wu-qi/"/>
    <updated>2015-11-11T15:58:48+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/11/afnetworkingfa-song-jsonshu-ju-dao-fu-wu-qi</id>
    <content type="html"><![CDATA[<!--more-->


<p>一般来说，客户端都是发送字典形式的数据到服务器来获得资源，而服务器一般以<code>JSON</code>格式数据返回。
现在需求是客户端发起POST请求，发送<code>JSON</code>格式的数据到服务器获取资源。
用<code>Python</code>脚本模拟如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># coding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">post_url</span> <span class="o">=</span> <span class="s">&quot;http://api.tuicool.com/api/login.json&quot;</span>
</span><span class='line'><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;User-Agent&quot;</span><span class="p">:</span> <span class="s">&quot;iOS/iphone5/2.13.1&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;Host&quot;</span><span class="p">:</span> <span class="s">&quot;api.tuicool.com&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;Accept-Language&quot;</span><span class="p">:</span> <span class="s">&quot;zh-CN&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;Authorization&quot;</span><span class="p">:</span> <span class="s">&quot;Basic MC4wLjAuMDp0dWljb29s&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;Content-Type&quot;</span><span class="p">:</span> <span class="s">&quot;application/json&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">form_data</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;email&quot;</span><span class="p">:</span> <span class="s">&quot;xx@qq.com&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;password&quot;</span><span class="p">:</span> <span class="s">&quot;qwertasdfg&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">json_str</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">form_data</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">json_str</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">session</span><span class="p">()</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span>
</span><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">post_url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">json_str</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Objective-C</code>中<code>NSURLRequest</code>中有一个<code>HTTPBody</code>刚好满足这个需求。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">loginWithEmail:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">email</span> <span class="nf">Password:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">password</span> <span class="nf">andBlock:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="kt">id</span> <span class="n">responseObject</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">))</span><span class="nv">block</span><span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">loginURL</span> <span class="o">=</span> <span class="s">@&quot;http://api.tuicool.com/api/login.json&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">//转化为json字符串</span>
</span><span class='line'>    <span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys</span><span class="p">:</span><span class="n">email</span><span class="p">,</span> <span class="s">@&quot;email&quot;</span><span class="p">,</span> <span class="n">password</span><span class="p">,</span> <span class="s">@&quot;password&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSJSONSerialization</span> <span class="nl">dataWithJSONObject</span><span class="p">:</span><span class="n">params</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSJSONWritingPrettyPrinted</span> <span class="nl">error</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">defaultHTTPHeader</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">NSMutableURLRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSMutableURLRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">loginURL</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">request</span> <span class="nl">setAllHTTPHeaderFields</span><span class="p">:[</span><span class="nb">self</span><span class="p">.</span><span class="n">requestSerializer</span> <span class="n">HTTPRequestHeaders</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">request</span> <span class="nl">setValue</span><span class="p">:</span><span class="s">@&quot;application/json&quot;</span> <span class="nl">forHTTPHeaderField</span><span class="p">:</span><span class="s">@&quot;Content-Type&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">HTTPBody</span> <span class="o">=</span> <span class="n">data</span><span class="p">;</span>
</span><span class='line'>    <span class="n">request</span><span class="p">.</span><span class="n">HTTPMethod</span> <span class="o">=</span> <span class="s">@&quot;POST&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span> <span class="o">=</span> <span class="p">[</span><span class="err"></span><span class="nb">self</span> <span class="nl">HTTPRequestOperationWithRequest</span><span class="p">:</span><span class="n">request</span> <span class="nl">success</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">operation</span><span class="p">,</span> <span class="kt">id</span>  <span class="n">_Nonnull</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;response = %@&quot;</span><span class="p">,</span> <span class="n">responseObject</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="nl">failure</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">operation</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span> <span class="n">_Nonnull</span> <span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;error=%@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'>        <span class="n">block</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">operationQueue</span> <span class="nl">addOperation</span><span class="p">:</span><span class="n">operation</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewCell滚动时内容重复]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/04/uitableviewcellgun-dong-shi-nei-rong-zhong-fu/"/>
    <updated>2015-11-04T22:53:13+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/04/uitableviewcellgun-dong-shi-nei-rong-zhong-fu</id>
    <content type="html"><![CDATA[<!--more-->


<p>在使用UITableView表格布局时，出现了表格Cell在滚动之后，内容被覆盖的现象。如图</p>

<p><a href="http://zwq.bingyan.net/wp-content/uploads/2015/11/屏幕快照-2015-11-01-15.58.31.png"><img class="alignnone size-medium wp-image-118" src="http://zwq.bingyan.net/wp-content/uploads/2015/11/屏幕快照-2015-11-01-15.58.31-163x300.png" alt="屏幕快照 2015-11-01 15.58.31" width="163" height="300" /></a></p>

<p>代码如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='Objective-C'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UITableViewCell</span> <span class="o">*</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="bp">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">cellForRowAtIndexPath:</span><span class="p">(</span><span class="bp">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">indexPath</span><span class="p">.</span><span class="n">section</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">static</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">cellIdentify</span> <span class="o">=</span> <span class="s">@&quot;DefaultSitesCell&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">UITableViewCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier</span><span class="p">:</span><span class="n">cellIdentify</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">cell</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">cell</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UITableViewCell</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithStyle</span><span class="p">:</span><span class="n">UITableViewCellStyleDefault</span> <span class="nl">reuseIdentifier</span><span class="p">:</span><span class="n">cellIdentify</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="bp">NSInteger</span> <span class="n">row</span> <span class="o">=</span> <span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSDictionary</span> <span class="o">*</span><span class="n">sites</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">listData</span> <span class="nl">objectAtIndex</span><span class="p">:</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">UILabel</span> <span class="o">*</span><span class="n">siteName</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">siteName</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">44</span><span class="p">);</span>
</span><span class='line'><span class="n">siteName</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">sites</span> <span class="nl">objectForKey</span><span class="p">:</span><span class="s">@&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">contentView</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">siteName</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">UIImageView</span> <span class="o">*</span><span class="n">imageV</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">imageV</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span>
</span><span class='line'><span class="n">imageV</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">15</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">imageV</span> <span class="nl">sd_setImageWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:[</span><span class="n">sites</span> <span class="nl">objectForKey</span><span class="p">:</span><span class="s">@&quot;image&quot;</span><span class="p">]]</span>
</span><span class='line'><span class="nl">placeholderImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;placeholder_icon.png&quot;</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">contentView</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">imageV</span><span class="p">];</span>
</span><span class='line'><span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'><span class="k">static</span> <span class="bp">NSString</span> <span class="o">*</span><span class="n">addedCellIdentify</span> <span class="o">=</span> <span class="s">@&quot;AddedSitesCell&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">UITableViewCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier</span><span class="p">:</span><span class="n">addedCellIdentify</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">cell</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">cell</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UITableViewCell</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithStyle</span><span class="p">:</span><span class="n">UITableViewCellStyleDefault</span> <span class="nl">reuseIdentifier</span><span class="p">:</span><span class="n">addedCellIdentify</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;+ 订阅更多站点&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">cell</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'><span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">textAlignment</span> <span class="o">=</span> <span class="n">NSTextAlignmentCenter</span><span class="p">;</span>
</span><span class='line'><span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>出现这种情况源于<code>UITableViewCell</code>的重用机制.
借用网上的解释: <a href="http://www.cocoachina.com/bbs/read.php?tid-144611.html">重用实现分析</a></p>

<ul>
<li><p>查看<code>UITableView</code>头文件，会找到<code>NSArray* visiableCells</code>，和<code>NSMutableArray* reusableTableCells</code>两个结构。<code>visiableCells</code>内保存当前显示的<code>cells</code>，<code>reusableTableCells</code>保存可重用的<code>cells</code>。</p></li>
<li><p><code>TableView</code>显示之初，<code>reusableTableCells</code>为空，那么<code>tableView dequeueReusableCellWithIdentifier:CellIdentifier</code>返回<code>nil</code>。开始的<code>cell</code>都是通过<code>[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier]</code>来创建，而且<code>cellForRowAtIndexPath</code>只是调用最大显示<code>cell</code>数的次数。</p></li>
</ul>


<p>比如：有100条数据，iPhone一屏最多显示10个<code>cell</code>。程序最开始显示<code>TableView</code>的情况是：</p>

<ul>
<li><p>用<code>[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier]</code>创建10次<code>cell</code>，并给<code>cell</code>指定同样的重用标识(当然，可以为不同显示类型的cell指定不同的标识)。并且10个<code>cell</code>全部都加入到<code>visiableCells</code>数组，<code>reusableTableCells</code>为空。</p></li>
<li><p>向下拖动<code>tableView</code>，当<code>cell1</code>完全移出屏幕，并且<code>cell11</code>(它也是<code>alloc</code>出来的，原因同上)完全显示出来的时候。<code>cell11</code>加入到<code>visiableCells</code>，<code>cell1</code>移出<code>visiableCells</code>，<code>cell1</code>加入到<code>reusableTableCells</code>。</p></li>
<li><p>接着向下拖动<code>tableView</code>，因为<code>reusableTableCells</code>中已经有值，所以，当需要显示新的<code>cell</code>，<code>cellForRowAtIndexPath</code>再次被调用的时候，<code>tableView dequeueReusableCellWithIdentifier:CellIdentifier</code>，返回<code>cell1</code>。<code>cell1</code>加入到<code>visiableCells</code>，<code>cell1</code>移出<code>reusableTableCells</code>；<code>cell2</code>移出<code>visiableCells</code>，<code>cell2</code>加入到<code>reusableTableCells</code>。之后再需要显示的<code>Cell</code>就可以正常重用了。</p></li>
</ul>


<p>理解了原理，解决这个问题的方法就有很多了。</p>

<h4>去掉重用机制</h4>

<p>每次都新建一个新的<code>UITableViewCel</code>·, 这样可以解决问题，但是对于内存和性能要求高的应用就不适合了。</p>

<h4>自定义<code>UITableViewCell</code></h4>

<p>这个方法是非常好的，推荐使用。但是我的<code>Cell</code>非常简单，自定义的话，感觉还是有点麻烦了。</p>

<h4>去掉之前的内容，添加新的内容</h4>

<p>因为每次从<code>reusableTableCells</code>中取出的<code>Cell</code>中<code>contentView</code>都不为空，所以继续添加，就会出现内容覆盖的现象。
添加这一行, 删除之前cell中的内容</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Objective-C'><span class='line'><span class="p">[</span><span class="n">cell</span><span class="p">.</span><span class="n">contentView</span><span class="p">.</span><span class="n">subviews</span> <span class="nl">makeObjectsPerformSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">removeFromSuperview</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Objective-C'><span class='line'><span class="k">for</span> <span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="k">in</span> <span class="n">cell</span><span class="p">.</span><span class="n">contentView</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>使用不同的重用标识符</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Objective-C'><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">CellIdentifier</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:</span><span class="s">@&quot;%d,%d&quot;</span><span class="p">,</span><span class="n">indexPath</span><span class="p">.</span><span class="n">section</span><span class="p">,</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>这种方法也值得争议,因为也没有完全利用重用机制。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS 添加toolBar]]></title>
    <link href="http://lvzwq.github.io/blog/2015/11/04/ios-tian-jia-toolbar/"/>
    <updated>2015-11-04T19:34:33+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/11/04/ios-tian-jia-toolbar</id>
    <content type="html"><![CDATA[<!--more-->


<p><code>UIToolBar</code>是<code>UINavigationController</code>中的一个<code>Bar</code>，默认是隐藏的。设置<code>UINavigationController</code>的<code>toolbarHidden</code>属性可显示<code>UIToolBar</code></p>

<p>也可以不用直接使用<code>UINavigationController</code>，直接新建，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addToolBar</span><span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">toolBar</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIToolbar</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">DeviceHeight</span> <span class="o">-</span> <span class="mi">40</span><span class="p">,</span> <span class="n">DeviceWidth</span><span class="p">,</span> <span class="mf">40.0f</span><span class="p">)];</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">back</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;Left&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item1</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:</span><span class="n">back</span>
</span><span class='line'>                                                              <span class="nl">style</span><span class="p">:</span><span class="n">UIBarButtonItemStyleBordered</span>
</span><span class='line'>                                                             <span class="nl">target</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                                             <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">dismissController</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">item1</span><span class="p">.</span><span class="n">tintColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">star</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;Star&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item2</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:</span><span class="n">star</span>
</span><span class='line'>                                                              <span class="nl">style</span><span class="p">:</span><span class="n">UIBarButtonItemStylePlain</span>
</span><span class='line'>                                                             <span class="nl">target</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                                             <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">starArticle</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">item2</span><span class="p">.</span><span class="n">tintColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">share</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;Share&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item3</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:</span><span class="n">share</span>
</span><span class='line'>                                                              <span class="nl">style</span><span class="p">:</span><span class="n">UIBarButtonItemStylePlain</span>
</span><span class='line'>                                                             <span class="nl">target</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                                             <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">shareArticle</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">item3</span><span class="p">.</span><span class="n">tintColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">comment</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;Bubble&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item4</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:</span><span class="n">comment</span>
</span><span class='line'>                                                              <span class="nl">style</span><span class="p">:</span><span class="n">UIBarButtonItemStylePlain</span>
</span><span class='line'>                                                             <span class="nl">target</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                                             <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">commentArticle</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">item4</span><span class="p">.</span><span class="n">tintColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">more</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;Star&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item5</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage</span><span class="p">:</span><span class="n">more</span>
</span><span class='line'>                                                                  <span class="nl">style</span><span class="p">:</span><span class="n">UIBarButtonItemStylePlain</span>
</span><span class='line'>                                                                 <span class="nl">target</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                                                                 <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">more</span><span class="p">)];</span>
</span><span class='line'>    <span class="n">item5</span><span class="p">.</span><span class="n">tintColor</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">greenColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIBarButtonItem</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>                              <span class="nl">initWithBarButtonSystemItem</span><span class="p">:</span><span class="n">UIBarButtonSystemItemFlexibleSpace</span>
</span><span class='line'>                              <span class="nl">target</span><span class="p">:</span><span class="nb">nil</span>
</span><span class='line'>                              <span class="nl">action</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">toolBar</span> <span class="nl">setItems</span><span class="p">:[</span><span class="bp">NSArray</span> <span class="nl">arrayWithObjects</span><span class="p">:</span><span class="n">item1</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">item3</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">item4</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">item5</span><span class="p">,</span> <span class="nb">nil</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">toolBar</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>加一个<code>item</code>是为了均匀分布<code>toolbar</code>上的空间。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLAlchemy(二) --- ORM]]></title>
    <link href="http://lvzwq.github.io/blog/2015/10/31/sqlalchemy-er-orm/"/>
    <updated>2015-10-31T19:34:33+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/10/31/sqlalchemy-er-orm</id>
    <content type="html"><![CDATA[<!--more-->


<p><code>SQLAlchemy ORM</code>提供了一个连接数据库表和用户自定义<code>Python</code>类的方法。</p>

<h3>定义一个映射(Mapping)</h3>

<p>类的映射使用已经在基类中定义的声明式系统,这个基类(<code>base class</code>)维护了一个和这个基类相关的数据表的对应关系, 这就是所谓的<code>declarative base class</code>。
我们的应用在一般在导入的模块中将只有一个这个基类的实例。我们使用<code>declarative_base()</code>创建这个基类的实例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy.ext.declarative</span> <span class="kn">import</span> <span class="n">declarative_base</span>
</span><span class='line'><span class="n">Base</span> <span class="o">=</span> <span class="n">declarative_base</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>有了这个基类我们可以定义任何数量的映射类。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">Column</span><span class="p">,</span> <span class="n">Integer</span><span class="p">,</span> <span class="n">String</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span><span class="p">(</span><span class="n">Base</span><span class="p">):</span>
</span><span class='line'>    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s">&#39;users&#39;</span>
</span><span class='line'>    <span class="nb">id</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'>    <span class="n">gender</span> <span class="o">=</span> <span class="n">Column</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">server_default</span><span class="o">=</span><span class="s">&#39;M&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;&lt;User(name=&#39;</span><span class="si">%s</span><span class="s">&#39;, gender=&#39;</span><span class="si">%s</span><span class="s">&#39;)&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>                            <span class="bp">self</span><span class="o">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 执行创建表的语句</span>
</span><span class='line'><span class="n">Base</span><span class="o">.</span><span class="n">metadata</span><span class="o">.</span><span class="n">create_all</span><span class="p">(</span><span class="n">engine</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>一个继承自<code>Base</code>的类至少有一个<code>__tablename__</code>属性，并且至少有一个含有主键(<code>primary key</code>)的<code>Column</code>。当一个类创建时， <code>Declarative</code> 将所有的<code>Column</code>类用特殊的Python属性访问器替代。</p>

<h3>创建Session</h3>

<p>ORM操作数据库的句柄就是<code>Session</code>.当我们启动我们的应用时，在<code>create_engine()</code>的同时，我们定义了一个<code>Session</code>类将作为一个创建<code>Session</code>实例的工厂。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy.orm</span> <span class="kn">import</span> <span class="n">sessionmaker</span>
</span><span class='line'><span class="n">Session</span> <span class="o">=</span> <span class="n">sessionmaker</span><span class="p">(</span><span class="n">bind</span><span class="o">=</span><span class="n">engine</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果我们还没有<code>Engine</code>的实例，我们可以先创建Session，当创建Engine后再绑定。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Session</span> <span class="o">=</span> <span class="n">sessionmaker</span><span class="p">()</span>
</span><span class='line'><span class="n">Session</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="n">bind</span><span class="o">=</span><span class="n">engine</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>当需要和数据库有一个会话时，可以初始化一个<code>Session</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">Session</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加新的类</h3>

<p>为了持久化<code>User</code>对象， 我们使用<code>add()</code>将它加入到<code>Session</code>中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="n">User</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;zhangsan&quot;</span><span class="p">,</span> <span class="n">gender</span><span class="o">=</span><span class="s">&quot;M&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>此时，这个<code>user</code>实例是待定的(<code>pending</code>);不执行任何SQL也不代表数据库中的一行数据。当使用一个<code>flush</code>过程时，<code>Session</code>将执行SQL来持久化<code>user</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">our_user</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&#39;zhangsan&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="p">()</span>
</span><span class='line'><span class="c"># 此时our_user 和 user是同一个对象</span>
</span></code></pre></td></tr></table></div></figure>


<p>事实上，<code>Session</code>返回同一行(对象)就是我们刚刚在<code>Session</code>内部的类的字典持久化的对象，所以我们事实上获得的就是我们加入<code>Session</code>中的实例。</p>

<p>我们需要告诉<code>Session</code>我们想要将所有的改变存入到数据库，提交事务。我们通过<code>commit()</code>来执行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>在执行<code>commit</code>之前，执行<code>query</code>后，即使<code>user</code>已经有了标识符<code>id</code>, 但是数据库中并没有提交数据，只有在<code>commit</code>之后才会提交数据。</p>

<p>我们可以在数据提交<code>commit</code>之前调用事务的<code>rollback</code>来回滚之前的修改。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>查询<code>Query</code></h3>

<p><code>Query</code>查询返回的是元组<code>tuples</code>,是<code>KeyedTuple</code>提供的类，并且更像一个原生的Python对象。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">,</span> <span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">row</span><span class="o">.</span><span class="n">User</span><span class="p">,</span> <span class="n">row</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>filter()</code>方法通常接收的是Python操作符，而<code>filter_by()</code>方法使用关键字参数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&quot;ed&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter_by</span><span class="p">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;ed&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>通用的查询语句
equals:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;ed&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>not equals:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">!=</span> <span class="s">&#39;ed&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>LIKE:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%e</span><span class="s">d%&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>IN:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">in_</span><span class="p">([</span><span class="s">&#39;ed&#39;</span><span class="p">,</span> <span class="s">&#39;wendy&#39;</span><span class="p">,</span> <span class="s">&#39;jack&#39;</span><span class="p">]))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># works with query objects too:</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">in_</span><span class="p">(</span>
</span><span class='line'>        <span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%e</span><span class="s">d%&#39;</span><span class="p">))</span>
</span><span class='line'><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>NOT IN:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="o">~</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">in_</span><span class="p">([</span><span class="s">&#39;ed&#39;</span><span class="p">,</span> <span class="s">&#39;wendy&#39;</span><span class="p">,</span> <span class="s">&#39;jack&#39;</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>IS NULL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># alternatively, if pep8/linters are a concern</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">is_</span><span class="p">(</span><span class="bp">None</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>IS NOT NULL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># alternatively, if pep8/linters are a concern</span>
</span><span class='line'>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">isnot</span><span class="p">(</span><span class="bp">None</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>AND:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># use and_()</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">and_</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">and_</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;ed&#39;</span><span class="p">,</span> <span class="n">User</span><span class="o">.</span><span class="n">fullname</span> <span class="o">==</span> <span class="s">&#39;Ed Jones&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># or send multiple expressions to .filter()</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;ed&#39;</span><span class="p">,</span> <span class="n">User</span><span class="o">.</span><span class="n">fullname</span> <span class="o">==</span> <span class="s">&#39;Ed Jones&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># or chain multiple filter()/filter_by() calls</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;ed&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">fullname</span> <span class="o">==</span> <span class="s">&#39;Ed Jones&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>OR:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">or_</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">or_</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;ed&#39;</span><span class="p">,</span> <span class="n">User</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="s">&#39;wendy&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">MATCH</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&#39;wendy&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>返回列表<code>List</code>和标量<code>Scalar</code></h3>

<p><code>all()</code>返回一个列表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%e</span><span class="s">d&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>first()</code>使用限制，返回结果集的第一条作为<code>Scalar</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">first</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>one()</code> 如果返回结果集不止一个对象，将<code>raise</code>一个错误。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy.orm.exc</span> <span class="kn">import</span> <span class="n">MultipleResultsFound</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">users</span> <span class="o">=</span> <span class="n">query</span><span class="o">.</span><span class="n">one</span><span class="p">()</span>
</span><span class='line'><span class="k">except</span> <span class="n">MultiResultsFound</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">e</span>
</span></code></pre></td></tr></table></div></figure>


<p>没有数据返回时</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy.orm.exc</span> <span class="kn">import</span> <span class="n">NoResultFound</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">users</span> <span class="o">=</span> <span class="n">query</span><span class="o">.</span><span class="n">one</span><span class="p">()</span>
</span><span class='line'><span class="k">except</span> <span class="n">NoResultFound</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">e</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>scalar()</code>调用<code>one()</code>方法，并且成功时返回第一列数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">query</span><span class="o">.</span><span class="n">scalar</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用文本SQL语句</h3>

<p>文本字符串可以在查询中灵活使用，通过<code>text()</code>构建。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">text</span>
</span><span class='line'><span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">text</span><span class="p">(</span><span class="s">&quot;id&gt;20&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">text</span><span class="p">(</span><span class="s">&quot;id&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以绑定参数，使用<code>params()</code>方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">text</span><span class="p">(</span><span class="s">&quot;id&lt;:value and name=:name&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">params</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="mi">220</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;ed&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">one</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>计数方法<code>count()</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">User</span><span class="p">)</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">Usre</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%e</span><span class="s">d&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>也可以使用<code>func.count()</code>来计数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">func</span>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">query</span><span class="p">(</span><span class="n">func</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="p">),</span> <span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">group_by</span><span class="p">(</span><span class="n">User</span><span class="o">.</span><span class="n">name</span><span class="p">)</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLAlchemy(一)]]></title>
    <link href="http://lvzwq.github.io/blog/2015/10/31/sqlalchemy-1/"/>
    <updated>2015-10-31T17:45:47+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/10/31/sqlalchemy-1</id>
    <content type="html"><![CDATA[<!--more-->


<h3>使用<code>create_engine</code>连接数据库</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from sqlalchemy import create_engine
</span><span class='line'>conn = "mysql://root:root@localhost/dbname?charset=utf8"
</span><span class='line'>engine = create_engine(conn, echo=True) # 在console中输出SQL语句</span></code></pre></td></tr></table></div></figure>


<p><code>create_engine</code>方法返回的是一个<code>Engine</code>对象实例，<code>Engine</code>对象实例<code>engine</code>并没有立即连接数据库，只有在第一次有与数据库操作的任务时才会去连接数据库。</p>

<h3>定义和创建表</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from sqlalchemy import Table, Column, Integer, String, MetaData, ForeignKey
</span><span class='line'>metadata = MetaData()</span></code></pre></td></tr></table></div></figure>


<p><code>SQLAlchemy</code> 使用 <code>ORM</code> 来映射对象和表的关系。
表(<code>Table</code>)的集合以及与它们有关系的子类(<code>child object</code>)  称为<code>数据库元数据</code>(<code>database metadata</code>)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>users = Table('user', metadata,
</span><span class='line'>        Column('id', Integer, primary_key=True),
</span><span class='line'>        Column('name', String(32), nullable=False),
</span><span class='line'>        Column('gender', String(1), nullable=False, server_default='M')
</span><span class='line'>        )
</span><span class='line'>metadata.create_all(engine)</span></code></pre></td></tr></table></div></figure>


<p>创建好表对象之后，我们来创建表。
使用<code>metadata</code>的<code>create_all</code>方法来在数据库中创建表。<code>create_all</code>这个方法首先会在数据库中查找对应的表是否存在，存在则不创建，所以这个方法多次调用是安全的。</p>

<h3>数据库操作</h3>

<ul>
<li>插入</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># Insert 构造对应insert语句</span>
</span><span class='line'><span class="n">ins</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">insert</span><span class="p">()</span>
</span><span class='line'><span class="c"># &lt;sqlalchemy.sql.dml.Insert object at 0x1079a6290&gt;</span>
</span><span class='line'><span class="k">print</span> <span class="nb">str</span><span class="p">(</span><span class="n">ins</span><span class="p">)</span>
</span><span class='line'><span class="c"># INSERT INTO &quot;user&quot; (id, name, gender) VALUES (:id, :name, :gender)</span>
</span><span class='line'><span class="n">ins</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">insert</span><span class="p">()</span><span class="o">.</span><span class="n">values</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&#39;jack&#39;</span><span class="p">,</span> <span class="n">gender</span><span class="o">=</span><span class="s">&#39;M&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c"># 也可以这样</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行插入操作
我们创建的<code>engine</code>对象是一个能执行SQL语句的数据库仓库。我们使用<code>connect</code>来创建一个连接.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">conn</span> <span class="o">=</span> <span class="n">engine</span><span class="o">.</span><span class="n">connect</span><span class="p">()</span>
</span><span class='line'><span class="c"># 执行插入操作</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">ins</span><span class="p">)</span> <span class="c"># 执行SQL插入操作,返回一个ResultProxy object</span>
</span><span class='line'><span class="k">print</span> <span class="n">result</span><span class="o">.</span><span class="n">rowcount</span> <span class="c"># 显示插入条数</span>
</span><span class='line'><span class="k">print</span> <span class="n">result</span><span class="o">.</span><span class="n">inserted_primary_key</span> <span class="c"># 显示插入的id</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>批量插入</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">insert</span><span class="p">(),</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&#39;name&#39;</span> <span class="p">:</span> <span class="s">&#39;Zs&#39;</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;F&#39;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&#39;name&#39;</span> <span class="p">:</span> <span class="s">&#39;Ls&#39;</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;M&#39;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&#39;name&#39;</span> <span class="p">:</span> <span class="s">&#39;Ww&#39;</span><span class="p">,</span> <span class="s">&#39;gender&#39;</span><span class="p">:</span> <span class="s">&#39;F&#39;</span><span class="p">}</span>
</span><span class='line'>    <span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>查询
主要的创建<code>select</code>的SQL语句的方法是<code>select()</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">select</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="p">])</span> <span class="c"># select参数是一个列表  </span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="c"># 返回的是一个ResultProxy object</span>
</span><span class='line'><span class="nb">all</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span> <span class="c"># 返回一个含有所有RowProxy的列表</span>
</span><span class='line'><span class="k">print</span> <span class="nb">all</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="nb">all</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'><span class="k">print</span> <span class="nb">all</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;name&#39;</span><span class="p">],</span> <span class="nb">all</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s">&#39;id&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">print</span> <span class="nb">all</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="nb">all</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="c"># RowProxy 不支持赋值操作,可以强制转换为dict</span>
</span></code></pre></td></tr></table></div></figure>


<p>条件查询</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="s">&#39;user&#39;</span><span class="p">,</span> <span class="s">&#39;address&#39;</span><span class="p">])</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">address</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">user_id</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>连接词</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">and_</span><span class="p">,</span>  <span class="n">or_</span><span class="p">,</span> <span class="n">not_</span>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">and_</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&#39;j%&#39;</span><span class="p">),</span> <span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&#39;M&#39;</span><span class="p">,</span> <span class="n">not_</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">])</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用原生SQL语句</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">text</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">text</span><span class="err">（</span><span class="s">&quot;SELECT * FROM users WHERE users.gender = :gender and name = :name&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">gender</span><span class="o">=</span><span class="s">&#39;F&#39;</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;Z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 也可以在select()中使用text语句</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">])</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">text</span><span class="p">(</span><span class="s">&quot;users.id = 2&quot;</span><span class="p">))</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
</span><span class='line'><span class="c"># 尽量少使用text</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用假名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">u1</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">alias</span><span class="p">()</span>
</span><span class='line'><span class="n">u2</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">alias</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用连接</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">print</span> <span class="n">users</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">address</span><span class="p">)</span> <span class="c"># 需要之前设置外键</span>
</span><span class='line'><span class="k">print</span> <span class="n">users</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">address</span><span class="p">,</span> <span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">address</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">user_id</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">address</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">email</span><span class="p">])</span><span class="o">.</span><span class="n">select_from</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">address</span><span class="p">,</span> <span class="n">address</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">user_id</span> <span class="o">==</span> <span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span><span class="p">))</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">address</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">email</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&quot;%qq.com&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># 产生的SQL语句为:</span>
</span><span class='line'><span class="sb">`SELECT &quot;user&quot;.name, address.email \nFROM &quot;user&quot; JOIN address ON address.user_id = &quot;user&quot;.id \nWHERE address.email LIKE :email_1`</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用SQLalchemy调用数据库的<code>function</code>函数</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy.sql</span> <span class="kn">import</span> <span class="n">func</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">func</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">label</span><span class="p">(</span><span class="s">&quot;max_id&quot;</span><span class="p">)])</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">like</span><span class="p">(</span><span class="s">&quot;Z%))</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>排序</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="p">])</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="p">])</span><span class="o">.</span><span class="n">order_by</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">desc</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>其他操作</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="p">])</span><span class="o">.</span><span class="n">having</span><span class="p">(</span><span class="n">func</span><span class="o">.</span><span class="n">length</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">select</span><span class="p">([</span><span class="n">users</span><span class="p">],</span> <span class="n">func</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">score</span><span class="p">)</span><span class="o">.</span><span class="n">lable</span><span class="p">(</span><span class="s">&quot;score_all&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">group_by</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">gender</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>更新和删除</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">up</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">update</span><span class="p">()</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">values</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;testname&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">up</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">update</span><span class="p">()</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">values</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;prefix_&quot;</span> <span class="o">+</span> <span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'><span class="c"># 使用bindparam来操作更新数据</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">bindparam</span>
</span><span class='line'><span class="n">stmt</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">update</span><span class="p">()</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">bindparam</span><span class="p">(</span><span class="s">&quot;user_id&quot;</span><span class="p">))</span><span class="o">.</span><span class="n">values</span><span class="p">(</span><span class="n">name</span> <span class="o">=</span> <span class="n">bindparam</span><span class="p">(</span><span class="s">&quot;new_name&quot;</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">stmt</span><span class="p">,</span> <span class="n">user_id</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">new_name</span><span class="o">=</span><span class="s">&quot;hello&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">批量更新数据</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">stmt</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&#39;user_id&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;new_name&#39;</span><span class="p">:</span> <span class="s">&#39;good&#39;</span><span class="p">},</span>
</span><span class='line'>    <span class="p">{</span><span class="s">&#39;user_id&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">&#39;new_name&#39;</span><span class="p">:</span> <span class="s">&#39;bad&#39;</span><span class="p">}</span>
</span><span class='line'>    <span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">delete</span><span class="p">()</span>
</span><span class='line'><span class="n">conn</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">d</span><span class="p">)</span> <span class="c"># 删除全部数据</span>
</span><span class='line'>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">delete</span><span class="p">()</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">users</span><span class="o">.</span><span class="n">c</span><span class="o">.</span><span class="n">gender</span> <span class="o">==</span> <span class="s">&quot;M&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python2中的编码错误]]></title>
    <link href="http://lvzwq.github.io/blog/2015/10/31/python2zhong-de-bian-ma-cuo-wu/"/>
    <updated>2015-10-31T17:22:55+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/10/31/python2zhong-de-bian-ma-cuo-wu</id>
    <content type="html"><![CDATA[<!--more-->




<h3>Python2中常出现的编码问题</h3>




<pre><code>UnicodeDecodeError: 'ascii' codec can't decode byte 0xe5 in position 4: ordinal not in range(128)
</code></pre>


<p>对中文字符串解码出错
虽然可以在代码头部加入以下代码解决</p>

<pre><code>import sys
import sys
reload(sys)
sys.setdefaultencoding("utf-8")
</code></pre>


<p>但是这种方式已经不推荐使用了<a href="http://stackoverflow.com/questions/3828723/why-we-need-sys-setdefaultencodingutf-8-in-a-py-script">[详细阅读]</a>。<br/>
所以推荐使用以下方式(Python2默认的字符串编码是<code>str</code>)<br/>
<code>xxx.decode(&ldquo;utf-8&rdquo;)</code><br/>
或者在你需要使用中文的地方前面加上<code>u</code>.</p>

<blockquote>
  这种错误通常发生在以某种编码("<code>ascii</code>")解码一个<code>str</code>类型的字符串时.因为编码映射仅仅只能支持一部分<code>str</code>类型的字符串到<code>unicode</code>字符串, 一个非法的<code>str</code>类型的序列将会导致编码<code>decode()</code>失败。 <a href="https://wiki.python.org/moin/UnicodeDecodeError">[详细阅读]</a>
</blockquote>


<p>如<code>str</code>字符串<code>\x81</code>就不能转化为<code>unicode</code>对应的字符串</p>

<pre><code>&gt;&gt;&gt; "x81".decode("utf-8")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/encodings/utf_8.py", line 16, in decode
    return codecs.utf_8_decode(input, errors, True)
UnicodeDecodeError: 'utf8' codec can't decode byte 0x81 in position 0: invalid start byte
</code></pre>


<p>另一种情况的解码错误</p>

<blockquote>
  自相矛盾的是，<code>UnicodeDecodeError</code>也可能发生在编码<code>__encoding__</code>时。
  原因是编码函数<code>encode()</code>通常情况下需要一个<code>unicode</code>类型的字符串作为参数。但是实际传过来的是一个<code>str</code>类型的参数。<code>encode()</code>函数将这个参数向上转换"<code>up-convert</code>"为<code>unicode</code>类型，然后再将转化为他们自己的编码。这也会出现这样的向上转换"<code>up-convertion</code>"的时候，系统默认选择一个<code>ascii</code>解码器, 解码器中没有这个<code>str</code>类型的<code>unicode</code>编码,  。因此这是在一个编码器<code>encoder</code>中出现解码失败的情况。
</blockquote>


<p>如<code>str</code>类型的<code>\xd0\x91</code>在encode()时就会出现<code>UnicodeDecodeError</code>错误</p>

<pre><code>&gt;&gt;&gt; "xd0x91".encode("utf-8")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
UnicodeDecodeError: 'ascii' codec can't decode byte 0xd0 in position 0: ordinal not in range(128)
</code></pre>


<p>在这个过程中发生了两件事情。首先<code>\xd0\x91</code>是python默认的<code>str</code>类型的字符串，而编码<code>encode</code>需要一个<code>unicode</code>类型的字符串，所以在编码<code>encode</code>之前，先转化为<code>unicode</code>,而执行的是<code>&ldquo;\xd0\x91&rdquo;.decode(&ldquo;ascii&rdquo;)</code>, 所以会出现上面的错误。</p>

<pre><code>&gt;&gt;&gt; "xd0x91".decode("ascii")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
UnicodeDecodeError: 'ascii' codec can't decode byte 0xd0 in position 0: ordinal not in range(128)
&gt;&gt;&gt; # 而如果使用utf-8 转码的话就可以正常执行
&gt;&gt;&gt; "xd0x91".decode("utf-8")
u'u0411'
</code></pre>




<h3>总结</h3>


<p>所以出现上面的<code>UnicodeDecodeError</code>错误时，可以不使用系统的<code>ascii</code>编码解码，自己使用<code>utf-8</code>解码就可以解决问题,即<code>xx.decode(&ldquo;utf-8&rdquo;)</code>。但是如果<code>str</code>类型的字符串非常特殊，如第一种例子中的<code>\x81</code>的话就直接无法转码了。所以最好的方法还是将一个字符串定义为<code>unicode</code>类型。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac使用Octopress搭建博客]]></title>
    <link href="http://lvzwq.github.io/blog/2015/09/04/macshi-yong-octopressda-jian-bo-ke/"/>
    <updated>2015-09-04T08:22:05+08:00</updated>
    <id>http://lvzwq.github.io/blog/2015/09/04/macshi-yong-octopressda-jian-bo-ke</id>
    <content type="html"><![CDATA[<!--more-->


<p>一、搭建环境</p>

<ul>
<li>安装<code>homebrew</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用<code>homebrew</code>升级新版本ruby替换系统自带<code>ruby</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install ruby</span></code></pre></td></tr></table></div></figure>


<ul>
<li>升级<code>gem</code>版本</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem update  --system 2.6.6</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装<code>bundler</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem install bundler</span></code></pre></td></tr></table></div></figure>


<ul>
<li>升级<code>rake</code>版本</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle update rake</span></code></pre></td></tr></table></div></figure>


<p>二、在本地启动博客服务</p>

<ul>
<li>安装博客所需要的<code>ruby</code>依赖</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundler install</span></code></pre></td></tr></table></div></figure>


<p>
* 安装默认主题和配置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<ul>
<li>编译markdown文件，生成静态文件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<ul>
<li>本地预览</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<ul>
<li>新建文章</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post
</span><span class='line'>Enter a title for your post:</span></code></pre></td></tr></table></div></figure>


<p>三、将本地博客上传至<code>GitPage</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
